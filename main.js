(self.webpackChunkv0_1=self.webpackChunkv0_1||[]).push([[179],{7879:(n,e,t)=>{"use strict";t.d(e,{Z:()=>m});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a),o=t(1667),A=t.n(o),c=new URL(t(6987),t.b),d=new URL(t(4962),t.b),p=new URL(t(7527),t.b),h=r()(s()),l=A()(c),u=A()(d),g=A()(p);h.push([n.id,".battlescreen__background {\n    display: flex;\n    background-color: #f0567279;\n    background-image: url("+l+");\n    width: 80vw;\n    height: fit-content;\n    flex-direction: column;\n    background-position: center;\n    background-size: contain;\n    background-repeat: no-repeat;\n    border-radius: 30px;\n    box-shadow: 0px -5px 39px 7px #f05673;\n    position: relative;\n}\n\n.battlescreen__background>.grid:nth-child(1) {\n    align-self: flex-start;\n    margin-left: 2rem;\n    margin-top: 2rem;\n}\n\n.battlescreen__background>.grid:nth-child(2) {\n    align-self: flex-end;\n    margin-right: 2rem;\n    margin-bottom: 2rem;\n}\n\n.battlescreen__background>.grid:nth-child(1)>.grid__square:hover {\n    background-color: hsla(278, 20%, 43%, 0.5);\n}\n\n.battlescreen__background>.grid:nth-child(2)>.grid__square:hover {\n    background-color: hsla(349, 84%, 64%, 0.5);\n}\n\n.battlescreen__background>.grid.swooshout {\n    animation: swooshOut 1s linear forwards;\n    position: absolute;\n}\n\n.battlescreen__background>.grid.disappear {\n    display: none;\n}\n\n.battlescreen__background>.grid.swooshin {\n    animation: swooshIn 1s linear forwards;\n}\n\n.battlescreen__background>.grid.appear {\n    display: grid;\n    align-self: center;\n    position: relative;\n}\n\n.commentator__container {\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    justify-self: center;\n    align-self: center;\n    border-radius: 20px;\n    width: fit-content;\n    height: fit-content;\n    background-image: url("+u+");\n    background-repeat: no-repeat;\n    background-size: 60px;\n    background-position: 50% 5%;\n    padding: 0.5rem;\n    transition: all 2s linear;\n    z-index: 1;\n    margin: 0.5rem;\n\n}\n\n.commentator {\n    font-family: 'Shaun_the_Sheep';\n    font-size: 2rem;\n    text-align: center;\n    z-index: 1;\n}\n\n.commentator::after {\n    content: \" ðŸŽµ \";\n    font-size: 1.5rem;\n}\n\n.rocket-container.flying {\n    animation: rocket 3s linear forwards;\n}\n\n.rocket-container.flyingReverse {\n    animation: reverseRocket 3s linear forwards;\n}\n\n.rocket-container {\n    position: absolute;\n    align-self: center;\n    justify-self: center;\n    justify-content: center;\n    align-items: center;\n    left: 0;\n    top: 30%;\n    right: 0;\n    bottom: 0;\n    margin: auto;\n    z-index: 2;\n}\n\n.rocket {\n    width: 50vw;\n    max-width: 20%;\n    height: auto;\n}\n\n.battlescreen__endScreen {\n    position: absolute;\n    background-color: hsl(349, 84%, 64%);\n    background-image: url("+g+');\n    background-position: center;\n    background-size: contain;\n    background-repeat: repeat;\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n    opacity: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 2;\n}\n\n.battlescreen__endScreen.expansion {\n    animation: expansion 1s ease-in forwards;\n}\n\n.battlescreen__endScreenText {\n    width: fit-content;\n    height: fit-content;\n    color: #ffcf09;\n    opacity: 0;\n    font-size: clamp(2rem, 20vw, 5rem);\n    animation: showText 2s linear 2s forwards;\n    font-family: \'Shaun_the_Sheep\';\n}\n\n.hitShip {\n    pointer-events: none;\n}\n\n.hitShip::after {\n    display: flex;\n    position: absolute;\n    content: "";\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    border-radius: 50%;\n    background-color: #ffce09;\n    width: 50%;\n    height: 50%;\n    animation: hitShip 2s linear forwards;\n}\n\n.staticHitShip {\n    pointer-events: none;\n}\n\n.missedShip {\n    pointer-events: none;\n}\n\n.missedShip::after {\n    display: flex;\n    position: absolute;\n    content: "";\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    border-radius: 50%;\n    background-color: #73578200;\n    width: 50%;\n    height: 50%;\n    animation: missShip 1s linear forwards;\n}\n\n.staticMissedShip {\n    pointer-events: none;\n}\n\n.staticMissedShip::after {\n    display: flex;\n    position: absolute;\n    content: "";\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    border-radius: 50%;\n    background-color: rgba(190, 25, 25, 0.425);\n    width: 50%;\n    height: 50%;\n}',"",{version:3,sources:["webpack://./src/css/battlescreen/battlescreen.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,2BAA2B;IAC3B,yDAAgF;IAChF,WAAW;IACX,mBAAmB;IACnB,sBAAsB;IACtB,2BAA2B;IAC3B,wBAAwB;IACxB,4BAA4B;IAC5B,mBAAmB;IACnB,qCAAqC;IACrC,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,uCAAuC;IACvC,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,qBAAqB;IACrB,oBAAoB;IACpB,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,yDAA8E;IAC9E,4BAA4B;IAC5B,qBAAqB;IACrB,2BAA2B;IAC3B,eAAe;IACf,yBAAyB;IACzB,UAAU;IACV,cAAc;;AAElB;;AAEA;IACI,8BAA8B;IAC9B,eAAe;IACf,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,2CAA2C;AAC/C;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,oBAAoB;IACpB,uBAAuB;IACvB,mBAAmB;IACnB,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,WAAW;IACX,cAAc;IACd,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,oCAAoC;IACpC,yDAA4D;IAC5D,2BAA2B;IAC3B,wBAAwB;IACxB,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,UAAU;IACV,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,UAAU;IACV,kCAAkC;IAClC,yCAAyC;IACzC,8BAA8B;AAClC;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,WAAW;IACX,OAAO;IACP,QAAQ;IACR,MAAM;IACN,SAAS;IACT,YAAY;IACZ,kBAAkB;IAClB,yBAAyB;IACzB,UAAU;IACV,WAAW;IACX,qCAAqC;AACzC;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,WAAW;IACX,OAAO;IACP,QAAQ;IACR,MAAM;IACN,SAAS;IACT,YAAY;IACZ,kBAAkB;IAClB,2BAA2B;IAC3B,UAAU;IACV,WAAW;IACX,sCAAsC;AAC1C;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,WAAW;IACX,OAAO;IACP,QAAQ;IACR,MAAM;IACN,SAAS;IACT,YAAY;IACZ,kBAAkB;IAClB,0CAA0C;IAC1C,UAAU;IACV,WAAW;AACf",sourcesContent:[".battlescreen__background {\n    display: flex;\n    background-color: #f0567279;\n    background-image: url(../../assets/img/battlescreen/battlescreen_background.png);\n    width: 80vw;\n    height: fit-content;\n    flex-direction: column;\n    background-position: center;\n    background-size: contain;\n    background-repeat: no-repeat;\n    border-radius: 30px;\n    box-shadow: 0px -5px 39px 7px #f05673;\n    position: relative;\n}\n\n.battlescreen__background>.grid:nth-child(1) {\n    align-self: flex-start;\n    margin-left: 2rem;\n    margin-top: 2rem;\n}\n\n.battlescreen__background>.grid:nth-child(2) {\n    align-self: flex-end;\n    margin-right: 2rem;\n    margin-bottom: 2rem;\n}\n\n.battlescreen__background>.grid:nth-child(1)>.grid__square:hover {\n    background-color: hsla(278, 20%, 43%, 0.5);\n}\n\n.battlescreen__background>.grid:nth-child(2)>.grid__square:hover {\n    background-color: hsla(349, 84%, 64%, 0.5);\n}\n\n.battlescreen__background>.grid.swooshout {\n    animation: swooshOut 1s linear forwards;\n    position: absolute;\n}\n\n.battlescreen__background>.grid.disappear {\n    display: none;\n}\n\n.battlescreen__background>.grid.swooshin {\n    animation: swooshIn 1s linear forwards;\n}\n\n.battlescreen__background>.grid.appear {\n    display: grid;\n    align-self: center;\n    position: relative;\n}\n\n.commentator__container {\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    justify-self: center;\n    align-self: center;\n    border-radius: 20px;\n    width: fit-content;\n    height: fit-content;\n    background-image: url('../../assets/img/battlescreen/commentator_chicken.png');\n    background-repeat: no-repeat;\n    background-size: 60px;\n    background-position: 50% 5%;\n    padding: 0.5rem;\n    transition: all 2s linear;\n    z-index: 1;\n    margin: 0.5rem;\n\n}\n\n.commentator {\n    font-family: 'Shaun_the_Sheep';\n    font-size: 2rem;\n    text-align: center;\n    z-index: 1;\n}\n\n.commentator::after {\n    content: \" ðŸŽµ \";\n    font-size: 1.5rem;\n}\n\n.rocket-container.flying {\n    animation: rocket 3s linear forwards;\n}\n\n.rocket-container.flyingReverse {\n    animation: reverseRocket 3s linear forwards;\n}\n\n.rocket-container {\n    position: absolute;\n    align-self: center;\n    justify-self: center;\n    justify-content: center;\n    align-items: center;\n    left: 0;\n    top: 30%;\n    right: 0;\n    bottom: 0;\n    margin: auto;\n    z-index: 2;\n}\n\n.rocket {\n    width: 50vw;\n    max-width: 20%;\n    height: auto;\n}\n\n.battlescreen__endScreen {\n    position: absolute;\n    background-color: hsl(349, 84%, 64%);\n    background-image: url('../../assets/img/results/result.png');\n    background-position: center;\n    background-size: contain;\n    background-repeat: repeat;\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n    opacity: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 2;\n}\n\n.battlescreen__endScreen.expansion {\n    animation: expansion 1s ease-in forwards;\n}\n\n.battlescreen__endScreenText {\n    width: fit-content;\n    height: fit-content;\n    color: #ffcf09;\n    opacity: 0;\n    font-size: clamp(2rem, 20vw, 5rem);\n    animation: showText 2s linear 2s forwards;\n    font-family: 'Shaun_the_Sheep';\n}\n\n.hitShip {\n    pointer-events: none;\n}\n\n.hitShip::after {\n    display: flex;\n    position: absolute;\n    content: \"\";\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    border-radius: 50%;\n    background-color: #ffce09;\n    width: 50%;\n    height: 50%;\n    animation: hitShip 2s linear forwards;\n}\n\n.staticHitShip {\n    pointer-events: none;\n}\n\n.missedShip {\n    pointer-events: none;\n}\n\n.missedShip::after {\n    display: flex;\n    position: absolute;\n    content: \"\";\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    border-radius: 50%;\n    background-color: #73578200;\n    width: 50%;\n    height: 50%;\n    animation: missShip 1s linear forwards;\n}\n\n.staticMissedShip {\n    pointer-events: none;\n}\n\n.staticMissedShip::after {\n    display: flex;\n    position: absolute;\n    content: \"\";\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    border-radius: 50%;\n    background-color: rgba(190, 25, 25, 0.425);\n    width: 50%;\n    height: 50%;\n}"],sourceRoot:""}]);const m=h},9067:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,"@keyframes expansion {\n    0% {\n        opacity: 0;\n        width: 200px;\n        height: 200px;\n    }\n\n    99% {\n        border-radius: 50%;\n        width: 100vw;\n        height: 100vh;\n    }\n\n    100% {\n        opacity: 1;\n        width: 100vw;\n        height: 150vh;\n        border-radius: 0%;\n    }\n}\n\n\n@keyframes rocket {\n    from {\n        transform: translateX(-50vw);\n    }\n\n    to {\n        transform: translateX(200vw);\n    }\n}\n\n@keyframes reverseRocket {\n    from {\n        transform: translateX(100vw);\n    }\n\n    to {\n        transform: translateX(-200vw);\n    }\n}\n\n@keyframes swooshOut {\n    from {\n        transform: translateX(0px);\n    }\n\n    to {\n        transform: translateX(-100vw);\n    }\n}\n\n@keyframes swooshIn {\n    from {\n        transform: translateX(100vw);\n    }\n\n    to {\n        transform: translateX(0px);\n    }\n}\n\n@keyframes missShip {\n\n    25% {\n        transform: translateY(20px);\n    }\n\n    50% {\n        transform: translateY(-20px);\n        background-color: rgba(55, 52, 189, 0.699);\n    }\n\n    75% {\n        transform: translateX(20px);\n    }\n\n    100% {\n        transform: translateX(0px);\n        background-color: rgba(190, 25, 25, 0.425);\n    }\n\n}\n\n@keyframes hitShip {\n    10% {\n        transform: translateY(20px);\n        scale: 0.5;\n    }\n\n    20% {\n        transform: translateY(-20px);\n        scale: 1.2;\n    }\n\n    30% {\n        transform: translateX(20px);\n        scale: 0.5;\n    }\n\n    40% {\n        transform: translateX(-20px);\n        scale: 1.2;\n        background-color: #ffd208ad\n    }\n\n    50% {\n        transform: translateX(0px);\n        scale: 0.5;\n        background-color: rgb(45, 158, 0);\n    }\n\n    60% {\n        scale: 0.5\n    }\n\n    80% {\n        scale: 1.2;\n    }\n\n    90% {\n        opacity: 1;\n    }\n\n    100% {\n        scale: 0;\n        opacity: 0;\n    }\n}","",{version:3,sources:["webpack://./src/css/battlescreen/battlescreen_animation.css"],names:[],mappings:"AAAA;IACI;QACI,UAAU;QACV,YAAY;QACZ,aAAa;IACjB;;IAEA;QACI,kBAAkB;QAClB,YAAY;QACZ,aAAa;IACjB;;IAEA;QACI,UAAU;QACV,YAAY;QACZ,aAAa;QACb,iBAAiB;IACrB;AACJ;;;AAGA;IACI;QACI,4BAA4B;IAChC;;IAEA;QACI,4BAA4B;IAChC;AACJ;;AAEA;IACI;QACI,4BAA4B;IAChC;;IAEA;QACI,6BAA6B;IACjC;AACJ;;AAEA;IACI;QACI,0BAA0B;IAC9B;;IAEA;QACI,6BAA6B;IACjC;AACJ;;AAEA;IACI;QACI,4BAA4B;IAChC;;IAEA;QACI,0BAA0B;IAC9B;AACJ;;AAEA;;IAEI;QACI,2BAA2B;IAC/B;;IAEA;QACI,4BAA4B;QAC5B,0CAA0C;IAC9C;;IAEA;QACI,2BAA2B;IAC/B;;IAEA;QACI,0BAA0B;QAC1B,0CAA0C;IAC9C;;AAEJ;;AAEA;IACI;QACI,2BAA2B;QAC3B,UAAU;IACd;;IAEA;QACI,4BAA4B;QAC5B,UAAU;IACd;;IAEA;QACI,2BAA2B;QAC3B,UAAU;IACd;;IAEA;QACI,4BAA4B;QAC5B,UAAU;QACV;IACJ;;IAEA;QACI,0BAA0B;QAC1B,UAAU;QACV,iCAAiC;IACrC;;IAEA;QACI;IACJ;;IAEA;QACI,UAAU;IACd;;IAEA;QACI,UAAU;IACd;;IAEA;QACI,QAAQ;QACR,UAAU;IACd;AACJ",sourcesContent:["@keyframes expansion {\n    0% {\n        opacity: 0;\n        width: 200px;\n        height: 200px;\n    }\n\n    99% {\n        border-radius: 50%;\n        width: 100vw;\n        height: 100vh;\n    }\n\n    100% {\n        opacity: 1;\n        width: 100vw;\n        height: 150vh;\n        border-radius: 0%;\n    }\n}\n\n\n@keyframes rocket {\n    from {\n        transform: translateX(-50vw);\n    }\n\n    to {\n        transform: translateX(200vw);\n    }\n}\n\n@keyframes reverseRocket {\n    from {\n        transform: translateX(100vw);\n    }\n\n    to {\n        transform: translateX(-200vw);\n    }\n}\n\n@keyframes swooshOut {\n    from {\n        transform: translateX(0px);\n    }\n\n    to {\n        transform: translateX(-100vw);\n    }\n}\n\n@keyframes swooshIn {\n    from {\n        transform: translateX(100vw);\n    }\n\n    to {\n        transform: translateX(0px);\n    }\n}\n\n@keyframes missShip {\n\n    25% {\n        transform: translateY(20px);\n    }\n\n    50% {\n        transform: translateY(-20px);\n        background-color: rgba(55, 52, 189, 0.699);\n    }\n\n    75% {\n        transform: translateX(20px);\n    }\n\n    100% {\n        transform: translateX(0px);\n        background-color: rgba(190, 25, 25, 0.425);\n    }\n\n}\n\n@keyframes hitShip {\n    10% {\n        transform: translateY(20px);\n        scale: 0.5;\n    }\n\n    20% {\n        transform: translateY(-20px);\n        scale: 1.2;\n    }\n\n    30% {\n        transform: translateX(20px);\n        scale: 0.5;\n    }\n\n    40% {\n        transform: translateX(-20px);\n        scale: 1.2;\n        background-color: #ffd208ad\n    }\n\n    50% {\n        transform: translateX(0px);\n        scale: 0.5;\n        background-color: rgb(45, 158, 0);\n    }\n\n    60% {\n        scale: 0.5\n    }\n\n    80% {\n        scale: 1.2;\n    }\n\n    90% {\n        opacity: 1;\n    }\n\n    100% {\n        scale: 0;\n        opacity: 0;\n    }\n}"],sourceRoot:""}]);const o=r},2471:(n,e,t)=>{"use strict";t.d(e,{Z:()=>u});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a),o=t(1667),A=t.n(o),c=new URL(t(4125),t.b),d=new URL(t(30),t.b),p=r()(s()),h=A()(c),l=A()(d);p.push([n.id,"@media (min-width: 1000px) {\n    .rocket-container {\n        position: absolute;\n        align-self: center;\n        justify-self: center;\n        justify-content: center;\n        align-items: center;\n        left: 50%;\n        top: 50%;\n        right: 0;\n        bottom: 0;\n        margin: auto;\n        z-index: 2;\n    }\n}\n\n@media (min-width: 1000px) and (max-width: 5000px) {\n    .rocket {\n        min-width: 800px;\n        height: auto;\n    }\n}\n\n@media (min-width: 0px) and (max-width: 1000px) {\n    .rocket {\n        min-width: 500px;\n        height: auto;\n    }\n\n    .rocket-container {\n        position: absolute;\n        align-self: center;\n        justify-self: center;\n        justify-content: center;\n        align-items: center;\n        left: 0;\n        top: 30%;\n        right: 0;\n        bottom: 0;\n        margin: auto;\n        z-index: 2;\n    }\n}\n\n@media (min-width: 3000px) {\n    .battlescreen__background {\n        flex-direction: row;\n        justify-content: space-between;\n    }\n\n    .battlescreen__background>.grid {\n        margin-left: 0rem;\n        margin-top: 2rem;\n    }\n\n    .commentator__container {\n        position: absolute;\n        margin: auto;\n        left: 0;\n        right: 0;\n        bottom: 50%;\n        top: 0;\n        width: calc(10vw + 20px);\n    }\n}\n\n@media (min-width: 1800px) and (max-width: 3000px) {\n    .commentator__container {\n        position: absolute;\n        margin: auto;\n        width: calc(15vw + 20px);\n        left: 50%;\n        right: 0;\n        top: 0%;\n        bottom: 20%;\n    }\n}\n\n@media (min-width: 1300px) and (max-width: 1800px) {\n    .commentator__container {\n        position: absolute;\n        margin: auto;\n        left: 40%;\n        right: 0%;\n        top: 0%;\n        bottom: 40%;\n        width: calc(15vw + 20px);\n    }\n}\n\n@media (min-width: 1000px) {\n    .battlescreen__background {\n        gap: 1rem;\n        padding: 2rem;\n    }\n}\n\n@media (min-width: 1000px) and (max-width: 1550px) {\n    .battlescreen__background {\n        background-image: url("+h+");\n    }\n}\n\n@media (min-width: 0px) and (max-width: 1000px) {\n    .battlescreen__background {\n        background-image: none;\n    }\n}\n\n@media (min-width: 0px) and (max-width: 500px) {\n    .battlescreen__background {\n        display: flex;\n    }\n\n    .battlescreen__background>.grid {\n        align-self: center;  \n    }\n\n    .battlescreen__background>.grid:nth-child(1) {\n        margin-left: 0rem;\n        margin-top: 0rem;\n    }\n    \n    .battlescreen__background>.grid:nth-child(2) {\n        margin-right: 0rem;\n        margin-bottom: 0rem;\n    }\n\n    .battlescreen__endScreen {\n        background-image: url("+l+");\n        background-size: cover;\n        background-repeat: repeat;\n    }\n\n    .battlescreen__endScreenText {\n        color: white;\n        text-align: center;\n    }\n}","",{version:3,sources:["webpack://./src/css/battlescreen/battlescreen_media.css"],names:[],mappings:"AAAA;IACI;QACI,kBAAkB;QAClB,kBAAkB;QAClB,oBAAoB;QACpB,uBAAuB;QACvB,mBAAmB;QACnB,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,YAAY;QACZ,UAAU;IACd;AACJ;;AAEA;IACI;QACI,gBAAgB;QAChB,YAAY;IAChB;AACJ;;AAEA;IACI;QACI,gBAAgB;QAChB,YAAY;IAChB;;IAEA;QACI,kBAAkB;QAClB,kBAAkB;QAClB,oBAAoB;QACpB,uBAAuB;QACvB,mBAAmB;QACnB,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,YAAY;QACZ,UAAU;IACd;AACJ;;AAEA;IACI;QACI,mBAAmB;QACnB,8BAA8B;IAClC;;IAEA;QACI,iBAAiB;QACjB,gBAAgB;IACpB;;IAEA;QACI,kBAAkB;QAClB,YAAY;QACZ,OAAO;QACP,QAAQ;QACR,WAAW;QACX,MAAM;QACN,wBAAwB;IAC5B;AACJ;;AAEA;IACI;QACI,kBAAkB;QAClB,YAAY;QACZ,wBAAwB;QACxB,SAAS;QACT,QAAQ;QACR,OAAO;QACP,WAAW;IACf;AACJ;;AAEA;IACI;QACI,kBAAkB;QAClB,YAAY;QACZ,SAAS;QACT,SAAS;QACT,OAAO;QACP,WAAW;QACX,wBAAwB;IAC5B;AACJ;;AAEA;IACI;QACI,SAAS;QACT,aAAa;IACjB;AACJ;;AAEA;IACI;QACI,yDAAsF;IAC1F;AACJ;;AAEA;IACI;QACI,sBAAsB;IAC1B;AACJ;;AAEA;IACI;QACI,aAAa;IACjB;;IAEA;QACI,kBAAkB;IACtB;;IAEA;QACI,iBAAiB;QACjB,gBAAgB;IACpB;;IAEA;QACI,kBAAkB;QAClB,mBAAmB;IACvB;;IAEA;QACI,yDAAgE;QAChE,sBAAsB;QACtB,yBAAyB;IAC7B;;IAEA;QACI,YAAY;QACZ,kBAAkB;IACtB;AACJ",sourcesContent:["@media (min-width: 1000px) {\n    .rocket-container {\n        position: absolute;\n        align-self: center;\n        justify-self: center;\n        justify-content: center;\n        align-items: center;\n        left: 50%;\n        top: 50%;\n        right: 0;\n        bottom: 0;\n        margin: auto;\n        z-index: 2;\n    }\n}\n\n@media (min-width: 1000px) and (max-width: 5000px) {\n    .rocket {\n        min-width: 800px;\n        height: auto;\n    }\n}\n\n@media (min-width: 0px) and (max-width: 1000px) {\n    .rocket {\n        min-width: 500px;\n        height: auto;\n    }\n\n    .rocket-container {\n        position: absolute;\n        align-self: center;\n        justify-self: center;\n        justify-content: center;\n        align-items: center;\n        left: 0;\n        top: 30%;\n        right: 0;\n        bottom: 0;\n        margin: auto;\n        z-index: 2;\n    }\n}\n\n@media (min-width: 3000px) {\n    .battlescreen__background {\n        flex-direction: row;\n        justify-content: space-between;\n    }\n\n    .battlescreen__background>.grid {\n        margin-left: 0rem;\n        margin-top: 2rem;\n    }\n\n    .commentator__container {\n        position: absolute;\n        margin: auto;\n        left: 0;\n        right: 0;\n        bottom: 50%;\n        top: 0;\n        width: calc(10vw + 20px);\n    }\n}\n\n@media (min-width: 1800px) and (max-width: 3000px) {\n    .commentator__container {\n        position: absolute;\n        margin: auto;\n        width: calc(15vw + 20px);\n        left: 50%;\n        right: 0;\n        top: 0%;\n        bottom: 20%;\n    }\n}\n\n@media (min-width: 1300px) and (max-width: 1800px) {\n    .commentator__container {\n        position: absolute;\n        margin: auto;\n        left: 40%;\n        right: 0%;\n        top: 0%;\n        bottom: 40%;\n        width: calc(15vw + 20px);\n    }\n}\n\n@media (min-width: 1000px) {\n    .battlescreen__background {\n        gap: 1rem;\n        padding: 2rem;\n    }\n}\n\n@media (min-width: 1000px) and (max-width: 1550px) {\n    .battlescreen__background {\n        background-image: url(../../assets/img/battlescreen/battlescreen_background_small.png);\n    }\n}\n\n@media (min-width: 0px) and (max-width: 1000px) {\n    .battlescreen__background {\n        background-image: none;\n    }\n}\n\n@media (min-width: 0px) and (max-width: 500px) {\n    .battlescreen__background {\n        display: flex;\n    }\n\n    .battlescreen__background>.grid {\n        align-self: center;  \n    }\n\n    .battlescreen__background>.grid:nth-child(1) {\n        margin-left: 0rem;\n        margin-top: 0rem;\n    }\n    \n    .battlescreen__background>.grid:nth-child(2) {\n        margin-right: 0rem;\n        margin-bottom: 0rem;\n    }\n\n    .battlescreen__endScreen {\n        background-image: url(../../assets/img/results/result_small.png);\n        background-size: cover;\n        background-repeat: repeat;\n    }\n\n    .battlescreen__endScreenText {\n        color: white;\n        text-align: center;\n    }\n}"],sourceRoot:""}]);const u=p},581:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,":root {\n    --grid-min: 350px;\n    --grid-mid-min: 400px;\n    --grid-mid: 500px;\n    --grid-max: 1000px;\n    --grid-size: clamp(var(--grid-min), var(--grid-mid), var(--grid-max));\n}\n\n.grid {\n    display: grid;\n    background-size: 100%;\n    border-radius: 20px;\n    grid-template: repeat(10, auto) / repeat(10, auto);\n    min-width: var(--grid-max);\n    min-height: var(--grid-max);\n    background-repeat: no-repeat;\n    box-shadow: 0px -5px 39px 7px #f05673;\n    position: relative;\n}\n\n.grid__square {\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n    position: relative;\n}","",{version:3,sources:["webpack://./src/css/grid/grid.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,qBAAqB;IACrB,iBAAiB;IACjB,kBAAkB;IAClB,qEAAqE;AACzE;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,mBAAmB;IACnB,kDAAkD;IAClD,0BAA0B;IAC1B,2BAA2B;IAC3B,4BAA4B;IAC5B,qCAAqC;IACrC,kBAAkB;AACtB;;AAEA;IACI,wBAAwB;IACxB,2BAA2B;IAC3B,4BAA4B;IAC5B,kBAAkB;AACtB",sourcesContent:[":root {\n    --grid-min: 350px;\n    --grid-mid-min: 400px;\n    --grid-mid: 500px;\n    --grid-max: 1000px;\n    --grid-size: clamp(var(--grid-min), var(--grid-mid), var(--grid-max));\n}\n\n.grid {\n    display: grid;\n    background-size: 100%;\n    border-radius: 20px;\n    grid-template: repeat(10, auto) / repeat(10, auto);\n    min-width: var(--grid-max);\n    min-height: var(--grid-max);\n    background-repeat: no-repeat;\n    box-shadow: 0px -5px 39px 7px #f05673;\n    position: relative;\n}\n\n.grid__square {\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n    position: relative;\n}"],sourceRoot:""}]);const o=r},2140:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,"@media (min-width: 1000px) and (max-width: 3000px) {\n    .grid {\n        min-width: var(--grid-mid);\n        min-height: var(--grid-mid);\n    }\n}\n\n@media (min-width: 600px) and (max-width: 1000px) {\n    .grid {\n        min-width: var(--grid-mid-min);\n        min-height: var(--grid-mid-min);\n    }\n}\n\n@media (min-width: 0px) and (max-width: 600px) {\n    .grid {\n        min-width: var(--grid-min);\n        min-height: var(--grid-min);\n    }\n}","",{version:3,sources:["webpack://./src/css/grid/grid_media.css"],names:[],mappings:"AAAA;IACI;QACI,0BAA0B;QAC1B,2BAA2B;IAC/B;AACJ;;AAEA;IACI;QACI,8BAA8B;QAC9B,+BAA+B;IACnC;AACJ;;AAEA;IACI;QACI,0BAA0B;QAC1B,2BAA2B;IAC/B;AACJ",sourcesContent:["@media (min-width: 1000px) and (max-width: 3000px) {\n    .grid {\n        min-width: var(--grid-mid);\n        min-height: var(--grid-mid);\n    }\n}\n\n@media (min-width: 600px) and (max-width: 1000px) {\n    .grid {\n        min-width: var(--grid-mid-min);\n        min-height: var(--grid-mid-min);\n    }\n}\n\n@media (min-width: 0px) and (max-width: 600px) {\n    .grid {\n        min-width: var(--grid-min);\n        min-height: var(--grid-min);\n    }\n}"],sourceRoot:""}]);const o=r},6794:(n,e,t)=>{"use strict";t.d(e,{Z:()=>h});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a),o=t(1667),A=t.n(o),c=new URL(t(9381),t.b),d=r()(s()),p=A()(c);d.push([n.id,'.header {\n    width: 100vw;\n    height: 30vh;\n    min-height: 115px;\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n    position: relative;\n    justify-content: flex-end;\n    display: flex;\n}\n\n.header::after {\n    content: "";\n    position: absolute;\n    z-index: -1;\n    width: 100vw;\n    height: 30vh;\n    min-height: 115px;\n    background-size: 100% 100%;\n    background-position: 0;\n    background-repeat: no-repeat;\n    background-image: url('+p+");\n}\n\n.watermark__link {\n    width: 32px;\n    height: 32px;\n    position: fixed;\n    margin-top: 5px;\n    background-size: 50%;\n    background-repeat: no-repeat;\n    opacity: 0.3;\n}","",{version:3,sources:["webpack://./src/css/header/header.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,YAAY;IACZ,iBAAiB;IACjB,wBAAwB;IACxB,2BAA2B;IAC3B,4BAA4B;IAC5B,kBAAkB;IAClB,yBAAyB;IACzB,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,iBAAiB;IACjB,0BAA0B;IAC1B,sBAAsB;IACtB,4BAA4B;IAC5B,yDAAwE;AAC5E;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,eAAe;IACf,eAAe;IACf,oBAAoB;IACpB,4BAA4B;IAC5B,YAAY;AAChB",sourcesContent:[".header {\n    width: 100vw;\n    height: 30vh;\n    min-height: 115px;\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n    position: relative;\n    justify-content: flex-end;\n    display: flex;\n}\n\n.header::after {\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    width: 100vw;\n    height: 30vh;\n    min-height: 115px;\n    background-size: 100% 100%;\n    background-position: 0;\n    background-repeat: no-repeat;\n    background-image: url('../../assets/img/header/header_prolongation.png');\n}\n\n.watermark__link {\n    width: 32px;\n    height: 32px;\n    position: fixed;\n    margin-top: 5px;\n    background-size: 50%;\n    background-repeat: no-repeat;\n    opacity: 0.3;\n}"],sourceRoot:""}]);const h=d},1556:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,"@media (min-width: 600px) and (max-width: 1000px) {\n    .header {\n        background-size: 10%;\n        height: 15vh;\n    }\n\n    .header::after {\n        height: 15vh;\n    }\n\n}\n\n@media (min-width: 0px) and (max-width: 600px) {\n    .header {\n        background-position: 50% 25%;\n        background-size: 80px;\n    }\n\n    .header::after {\n        height: 20vh;\n    }\n}","",{version:3,sources:["webpack://./src/css/header/header_media.css"],names:[],mappings:"AAAA;IACI;QACI,oBAAoB;QACpB,YAAY;IAChB;;IAEA;QACI,YAAY;IAChB;;AAEJ;;AAEA;IACI;QACI,4BAA4B;QAC5B,qBAAqB;IACzB;;IAEA;QACI,YAAY;IAChB;AACJ",sourcesContent:["@media (min-width: 600px) and (max-width: 1000px) {\n    .header {\n        background-size: 10%;\n        height: 15vh;\n    }\n\n    .header::after {\n        height: 15vh;\n    }\n\n}\n\n@media (min-width: 0px) and (max-width: 600px) {\n    .header {\n        background-position: 50% 25%;\n        background-size: 80px;\n    }\n\n    .header::after {\n        height: 20vh;\n    }\n}"],sourceRoot:""}]);const o=r},5820:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,".intro-screen__main-container {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    height: 100vh;\n}\n\n.intro-screen__landscape {\n    display: flex;\n    width: 100vw;\n    height: 100vh;\n    background-size: 100% 100%;\n    background-repeat: no-repeat;\n    position: relative;\n}\n\n.intro-screen_bubble {\n    width: 400px;\n    height: 400px;\n    transition: all 2s;\n    position: relative;\n}\n\n.intro-screen__bubble-container {\n    position: absolute;\n}\n\n.intro-screen__bubble-container.moving {\n    animation: topToBottom 10s linear infinite alternate forwards;\n}\n\n.intro-screen_bubble.moving {\n    animation: leftToRight 7s linear infinite alternate forwards;\n}\n\n.intro-screen_bubble.scaled {\n    scale: 1.5;\n    transition: all 2s;\n}\n\n.intro-screen_2P_alert {\n    opacity: 0;\n    transition: all 2s;\n    color: #ffcf09;\n    font-family: 'Shaun_the_Sheep';\n    font-size: clamp(1rem, calc(3vw + 10px), 3rem);\n    z-index: 0;\n    width: fit-content;\n    height: fit-content;\n    transition: all 2s;\n\n}\n\n.intro-screen__play-button {\n    width: 20%;\n    height: 20%;\n    align-self: flex-end;\n    margin-bottom: 2%;\n    margin-left: 50%;\n    min-width: 200px;\n    min-height: 100px;\n    transition: all 2s;\n\n}\n\n.intro-screen__play-button:hover {\n    scale: 1.2;\n    transition: all 2s;\n\n}\n\n.intro-screen__play-button:active {\n    scale: 1.1;\n}\n\n.visibleText {\n    animation: showText 3s linear forwards;\n    transition: all 2s;\n}\n","",{version:3,sources:["webpack://./src/css/introscreen/introscreen.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,WAAW;IACX,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,0BAA0B;IAC1B,4BAA4B;IAC5B,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,6DAA6D;AACjE;;AAEA;IACI,4DAA4D;AAChE;;AAEA;IACI,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,kBAAkB;IAClB,cAAc;IACd,8BAA8B;IAC9B,8CAA8C;IAC9C,UAAU;IACV,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;;AAEtB;;AAEA;IACI,UAAU;IACV,WAAW;IACX,oBAAoB;IACpB,iBAAiB;IACjB,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;;AAEtB;;AAEA;IACI,UAAU;IACV,kBAAkB;;AAEtB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,sCAAsC;IACtC,kBAAkB;AACtB",sourcesContent:[".intro-screen__main-container {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    height: 100vh;\n}\n\n.intro-screen__landscape {\n    display: flex;\n    width: 100vw;\n    height: 100vh;\n    background-size: 100% 100%;\n    background-repeat: no-repeat;\n    position: relative;\n}\n\n.intro-screen_bubble {\n    width: 400px;\n    height: 400px;\n    transition: all 2s;\n    position: relative;\n}\n\n.intro-screen__bubble-container {\n    position: absolute;\n}\n\n.intro-screen__bubble-container.moving {\n    animation: topToBottom 10s linear infinite alternate forwards;\n}\n\n.intro-screen_bubble.moving {\n    animation: leftToRight 7s linear infinite alternate forwards;\n}\n\n.intro-screen_bubble.scaled {\n    scale: 1.5;\n    transition: all 2s;\n}\n\n.intro-screen_2P_alert {\n    opacity: 0;\n    transition: all 2s;\n    color: #ffcf09;\n    font-family: 'Shaun_the_Sheep';\n    font-size: clamp(1rem, calc(3vw + 10px), 3rem);\n    z-index: 0;\n    width: fit-content;\n    height: fit-content;\n    transition: all 2s;\n\n}\n\n.intro-screen__play-button {\n    width: 20%;\n    height: 20%;\n    align-self: flex-end;\n    margin-bottom: 2%;\n    margin-left: 50%;\n    min-width: 200px;\n    min-height: 100px;\n    transition: all 2s;\n\n}\n\n.intro-screen__play-button:hover {\n    scale: 1.2;\n    transition: all 2s;\n\n}\n\n.intro-screen__play-button:active {\n    scale: 1.1;\n}\n\n.visibleText {\n    animation: showText 3s linear forwards;\n    transition: all 2s;\n}\n"],sourceRoot:""}]);const o=r},6603:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,"@keyframes leftToRight {\n\n    0% {\n        transform: translateX(0%);\n    }\n\n    100% {\n        transform: translateX(100vw);\n    }\n}\n\n@keyframes leftToRightMobile {\n\n    0% {\n        transform: translateX(0%);\n    }\n\n    100% {\n        transform: translateX(40vw);\n    }\n}\n\n@keyframes topToBottom {\n\n    0% {\n        transform: translateY(-10%);\n    }\n\n    10% {\n        transform: translateY(10%);\n    }\n\n    20% {\n        transform: translateY(-10%);\n    }\n\n    30% {\n        transform: translateY(10%);\n    }\n\n    40% {\n        transform: translateY(-10%);\n    }\n\n    50% {\n        transform: translateY(10%);\n    }\n\n    60% {\n        transform: translateY(-10%);\n    }\n\n    70% {\n        transform: translateY(10%);\n    }\n\n    80% {\n        transform: translateY(-10%);\n    }\n\n    90% {\n        transform: translateY(10%);\n    }\n\n    100% {\n        transform: translateY(-10%);\n    }\n}\n\n@keyframes showText {\n    0% {\n        opacity: 0;\n    }\n\n    100% {\n        opacity: 1;\n    }\n}","",{version:3,sources:["webpack://./src/css/introscreen/introscreen_animation.css"],names:[],mappings:"AAAA;;IAEI;QACI,yBAAyB;IAC7B;;IAEA;QACI,4BAA4B;IAChC;AACJ;;AAEA;;IAEI;QACI,yBAAyB;IAC7B;;IAEA;QACI,2BAA2B;IAC/B;AACJ;;AAEA;;IAEI;QACI,2BAA2B;IAC/B;;IAEA;QACI,0BAA0B;IAC9B;;IAEA;QACI,2BAA2B;IAC/B;;IAEA;QACI,0BAA0B;IAC9B;;IAEA;QACI,2BAA2B;IAC/B;;IAEA;QACI,0BAA0B;IAC9B;;IAEA;QACI,2BAA2B;IAC/B;;IAEA;QACI,0BAA0B;IAC9B;;IAEA;QACI,2BAA2B;IAC/B;;IAEA;QACI,0BAA0B;IAC9B;;IAEA;QACI,2BAA2B;IAC/B;AACJ;;AAEA;IACI;QACI,UAAU;IACd;;IAEA;QACI,UAAU;IACd;AACJ",sourcesContent:["@keyframes leftToRight {\n\n    0% {\n        transform: translateX(0%);\n    }\n\n    100% {\n        transform: translateX(100vw);\n    }\n}\n\n@keyframes leftToRightMobile {\n\n    0% {\n        transform: translateX(0%);\n    }\n\n    100% {\n        transform: translateX(40vw);\n    }\n}\n\n@keyframes topToBottom {\n\n    0% {\n        transform: translateY(-10%);\n    }\n\n    10% {\n        transform: translateY(10%);\n    }\n\n    20% {\n        transform: translateY(-10%);\n    }\n\n    30% {\n        transform: translateY(10%);\n    }\n\n    40% {\n        transform: translateY(-10%);\n    }\n\n    50% {\n        transform: translateY(10%);\n    }\n\n    60% {\n        transform: translateY(-10%);\n    }\n\n    70% {\n        transform: translateY(10%);\n    }\n\n    80% {\n        transform: translateY(-10%);\n    }\n\n    90% {\n        transform: translateY(10%);\n    }\n\n    100% {\n        transform: translateY(-10%);\n    }\n}\n\n@keyframes showText {\n    0% {\n        opacity: 0;\n    }\n\n    100% {\n        opacity: 1;\n    }\n}"],sourceRoot:""}]);const o=r},8705:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,"@media (min-width: 0px) and (max-width: 1000px) {\n    .intro-screen_bubble {\n        width: 200px;\n        height: 200px;\n    }\n\n    .intro-screen_bubble.moving {\n        animation: leftToRightMobile 5s linear infinite alternate forwards;\n    }\n}\n\n@media (min-width: 0px) and (max-width: 500px) {\n    .intro-screen__play-button {\n        margin-left: 30%;\n    }\n}","",{version:3,sources:["webpack://./src/css/introscreen/introscreen_media.css"],names:[],mappings:"AAAA;IACI;QACI,YAAY;QACZ,aAAa;IACjB;;IAEA;QACI,kEAAkE;IACtE;AACJ;;AAEA;IACI;QACI,gBAAgB;IACpB;AACJ",sourcesContent:["@media (min-width: 0px) and (max-width: 1000px) {\n    .intro-screen_bubble {\n        width: 200px;\n        height: 200px;\n    }\n\n    .intro-screen_bubble.moving {\n        animation: leftToRightMobile 5s linear infinite alternate forwards;\n    }\n}\n\n@media (min-width: 0px) and (max-width: 500px) {\n    .intro-screen__play-button {\n        margin-left: 30%;\n    }\n}"],sourceRoot:""}]);const o=r},8670:(n,e,t)=>{"use strict";t.d(e,{Z:()=>h});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a),o=t(1667),A=t.n(o),c=new URL(t(3713),t.b),d=r()(s()),p=A()(c);d.push([n.id,"body {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #fef0b5ff;\n    background-image: url("+p+");\n    background-position: 0;\n    background-size: cover;\n    width: 100%;\n    gap: 2rem;\n}","",{version:3,sources:["webpack://./src/css/miscellaneous/body.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,2BAA2B;IAC3B,yDAAgE;IAChE,sBAAsB;IACtB,sBAAsB;IACtB,WAAW;IACX,SAAS;AACb",sourcesContent:["body {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #fef0b5ff;\n    background-image: url(../../assets/img/body/body_background.jpg);\n    background-position: 0;\n    background-size: cover;\n    width: 100%;\n    gap: 2rem;\n}"],sourceRoot:""}]);const h=d},2006:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,"*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}","",{version:3,sources:["webpack://./src/css/miscellaneous/common.css"],names:[],mappings:"AAAA;;;IAGI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd",sourcesContent:["*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}"],sourceRoot:""}]);const o=r},8439:(n,e,t)=>{"use strict";t.d(e,{Z:()=>h});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a),o=t(1667),A=t.n(o),c=new URL(t(3233),t.b),d=r()(s()),p=A()(c);d.push([n.id,"@font-face {\n    font-family: 'Shaun_the_Sheep';\n    src: url("+p+");\n    font-weight: 600;\n    font-style: normal;\n}","",{version:3,sources:["webpack://./src/css/miscellaneous/fonts.css"],names:[],mappings:"AAAA;IACI,8BAA8B;IAC9B,4CAAgD;IAChD,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:["@font-face {\n    font-family: 'Shaun_the_Sheep';\n    src: url(../../assets/fonts/Shaun_the_Sheep.ttf);\n    font-weight: 600;\n    font-style: normal;\n}"],sourceRoot:""}]);const h=d},9571:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,".selection-screen__background {\n    flex-direction: row-reverse;\n    gap: 5rem;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    width: 80%;\n    height: 100%;\n    padding: 2rem;\n    background-color: rgba(0, 0, 0, 0.233);\n    border: 20px solid #f05672e0;\n    border-radius: 10px;\n    box-shadow: 0px -5px 39px 7px #f05673;\n}\n\n.selection-validation {\n    width: clamp(150px, 15vw, 200px);\n    border: 5px solid rgba(253, 239, 239, 0.233);\n    border-radius: 50%;\n    box-shadow: 0px -5px 39px 7px black;\n    transition: all 1s ease-in-out;\n}\n\n.selection-screen__background-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    gap: 2rem;\n}\n\n.selection-validation:hover {\n    transform: scale(1.1);\n}\n\n.selection-validation:active {\n    transform: scale(1);\n    animation: getPink 1s linear normal forwards;\n}\n\n.grid__square.disabled_input {\n    pointer-events: none;\n}\n\n.grid.disabled_input {\n    cursor: not-allowed;\n}\n\n.grid__square.dragover {\n    background-color: #ffd208ad\n}\n\n.grid__square.invalid {\n    cursor: not-allowed;\n    background-color: hsla(0, 72%, 40%, 0.479);\n}\n\n.hide {\n    background-size: 0;\n}\n","",{version:3,sources:["webpack://./src/css/selectionScreen/selectionScreen.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,SAAS;IACT,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sCAAsC;IACtC,4BAA4B;IAC5B,mBAAmB;IACnB,qCAAqC;AACzC;;AAEA;IACI,gCAAgC;IAChC,4CAA4C;IAC5C,kBAAkB;IAClB,mCAAmC;IACnC,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,WAAW;IACX,YAAY;IACZ,SAAS;AACb;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,mBAAmB;IACnB,4CAA4C;AAChD;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI;AACJ;;AAEA;IACI,mBAAmB;IACnB,0CAA0C;AAC9C;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:[".selection-screen__background {\n    flex-direction: row-reverse;\n    gap: 5rem;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    width: 80%;\n    height: 100%;\n    padding: 2rem;\n    background-color: rgba(0, 0, 0, 0.233);\n    border: 20px solid #f05672e0;\n    border-radius: 10px;\n    box-shadow: 0px -5px 39px 7px #f05673;\n}\n\n.selection-validation {\n    width: clamp(150px, 15vw, 200px);\n    border: 5px solid rgba(253, 239, 239, 0.233);\n    border-radius: 50%;\n    box-shadow: 0px -5px 39px 7px black;\n    transition: all 1s ease-in-out;\n}\n\n.selection-screen__background-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    gap: 2rem;\n}\n\n.selection-validation:hover {\n    transform: scale(1.1);\n}\n\n.selection-validation:active {\n    transform: scale(1);\n    animation: getPink 1s linear normal forwards;\n}\n\n.grid__square.disabled_input {\n    pointer-events: none;\n}\n\n.grid.disabled_input {\n    cursor: not-allowed;\n}\n\n.grid__square.dragover {\n    background-color: #ffd208ad\n}\n\n.grid__square.invalid {\n    cursor: not-allowed;\n    background-color: hsla(0, 72%, 40%, 0.479);\n}\n\n.hide {\n    background-size: 0;\n}\n"],sourceRoot:""}]);const o=r},2671:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,"@media (min-width: 3000px) {\n    .selection-screen__background-container {\n        flex-direction: row;\n        justify-content: space-evenly;\n    }\n}\n\n@media (min-width: 1000px) and (max-width: 1200px) {\n    .selection-screen__background {\n        width: fit-content;\n    }\n}\n\n@media (max-width: 1000px) and (min-height: 880px) {\n    .selection-screen__background {\n        flex-direction: column;\n        border: 0px solid #f05672e0;\n\n    }\n    .selection-screen__background-container {\n        flex-direction: row;\n        justify-content: space-evenly;\n    }\n    .selection-validation {\n        align-self: center;\n    }\n}\n\n\n@media (min-width: 0px) and (max-width: 600px) {\n    .selection-screen__background-container {\n        flex-direction: column;\n        gap: 0rem;\n    }\n    .selection-screen__background {\n        flex-direction: column;\n        background-color: transparent;\n        border: 0px solid #f05672e0;\n        gap: 1rem;\n        box-shadow: none;\n    }\n}","",{version:3,sources:["webpack://./src/css/selectionScreen/selectionScreen_media.css"],names:[],mappings:"AAAA;IACI;QACI,mBAAmB;QACnB,6BAA6B;IACjC;AACJ;;AAEA;IACI;QACI,kBAAkB;IACtB;AACJ;;AAEA;IACI;QACI,sBAAsB;QACtB,2BAA2B;;IAE/B;IACA;QACI,mBAAmB;QACnB,6BAA6B;IACjC;IACA;QACI,kBAAkB;IACtB;AACJ;;;AAGA;IACI;QACI,sBAAsB;QACtB,SAAS;IACb;IACA;QACI,sBAAsB;QACtB,6BAA6B;QAC7B,2BAA2B;QAC3B,SAAS;QACT,gBAAgB;IACpB;AACJ",sourcesContent:["@media (min-width: 3000px) {\n    .selection-screen__background-container {\n        flex-direction: row;\n        justify-content: space-evenly;\n    }\n}\n\n@media (min-width: 1000px) and (max-width: 1200px) {\n    .selection-screen__background {\n        width: fit-content;\n    }\n}\n\n@media (max-width: 1000px) and (min-height: 880px) {\n    .selection-screen__background {\n        flex-direction: column;\n        border: 0px solid #f05672e0;\n\n    }\n    .selection-screen__background-container {\n        flex-direction: row;\n        justify-content: space-evenly;\n    }\n    .selection-validation {\n        align-self: center;\n    }\n}\n\n\n@media (min-width: 0px) and (max-width: 600px) {\n    .selection-screen__background-container {\n        flex-direction: column;\n        gap: 0rem;\n    }\n    .selection-screen__background {\n        flex-direction: column;\n        background-color: transparent;\n        border: 0px solid #f05672e0;\n        gap: 1rem;\n        box-shadow: none;\n    }\n}"],sourceRoot:""}]);const o=r},3887:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,'.selection_space {\n    min-width: 800px;\n    min-height: 800px;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    box-shadow: 0px -5px 39px 7px #f05673;\n    border-radius: 50%;\n    position: static;\n}\n\n.selection__title {\n    font-family: "Shaun_the_Sheep";\n    color: #ffcf09;\n    text-shadow: -1px 0px 3px rgb(0, 0, 0);\n    font-size: 3rem;\n}\n\n.selection__title__container {\n    display: flex;\n    position: relative;\n    padding: 0.5rem;\n\n}',"",{version:3,sources:["webpack://./src/css/selectionSpace/selectionSpace.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,sBAAsB;IACtB,4BAA4B;IAC5B,2BAA2B;IAC3B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,qCAAqC;IACrC,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,8BAA8B;IAC9B,cAAc;IACd,sCAAsC;IACtC,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,eAAe;;AAEnB",sourcesContent:['.selection_space {\n    min-width: 800px;\n    min-height: 800px;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    box-shadow: 0px -5px 39px 7px #f05673;\n    border-radius: 50%;\n    position: static;\n}\n\n.selection__title {\n    font-family: "Shaun_the_Sheep";\n    color: #ffcf09;\n    text-shadow: -1px 0px 3px rgb(0, 0, 0);\n    font-size: 3rem;\n}\n\n.selection__title__container {\n    display: flex;\n    position: relative;\n    padding: 0.5rem;\n\n}'],sourceRoot:""}]);const o=r},2298:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,"@media (max-width: 3000px) {\n    .selection_space {\n        min-width: 400px;\n        min-height: 400px;\n    }\n\n    .selection__title {\n        font-size: 2rem;\n    }\n}\n\n@media (max-width: 1000px) and (min-height: 1200px) {\n    .selection_space {\n        min-width: 400px;\n        min-height: 400px;\n    }\n\n    .selection__title {\n        font-size: 1rem;\n    }\n}\n\n@media (max-width: 1000px) and (max-height: 880px) {\n    .selection_space {\n        min-width: 250px;\n        min-height: 250px;\n    }\n    .selection__title {\n        font-size: 1rem;\n    }\n}\n\n@media (min-width: 0px) and (max-width: 600px) {\n    .selection_space {\n        min-width: 350px;\n        min-height: 200px;\n        border-radius: 10px;\n        background-position: -2px;\n    }\n    .selection__title {\n        font-size: 1rem;\n    }\n}","",{version:3,sources:["webpack://./src/css/selectionSpace/selectionSpace_media.css"],names:[],mappings:"AAAA;IACI;QACI,gBAAgB;QAChB,iBAAiB;IACrB;;IAEA;QACI,eAAe;IACnB;AACJ;;AAEA;IACI;QACI,gBAAgB;QAChB,iBAAiB;IACrB;;IAEA;QACI,eAAe;IACnB;AACJ;;AAEA;IACI;QACI,gBAAgB;QAChB,iBAAiB;IACrB;IACA;QACI,eAAe;IACnB;AACJ;;AAEA;IACI;QACI,gBAAgB;QAChB,iBAAiB;QACjB,mBAAmB;QACnB,yBAAyB;IAC7B;IACA;QACI,eAAe;IACnB;AACJ",sourcesContent:["@media (max-width: 3000px) {\n    .selection_space {\n        min-width: 400px;\n        min-height: 400px;\n    }\n\n    .selection__title {\n        font-size: 2rem;\n    }\n}\n\n@media (max-width: 1000px) and (min-height: 1200px) {\n    .selection_space {\n        min-width: 400px;\n        min-height: 400px;\n    }\n\n    .selection__title {\n        font-size: 1rem;\n    }\n}\n\n@media (max-width: 1000px) and (max-height: 880px) {\n    .selection_space {\n        min-width: 250px;\n        min-height: 250px;\n    }\n    .selection__title {\n        font-size: 1rem;\n    }\n}\n\n@media (min-width: 0px) and (max-width: 600px) {\n    .selection_space {\n        min-width: 350px;\n        min-height: 200px;\n        border-radius: 10px;\n        background-position: -2px;\n    }\n    .selection__title {\n        font-size: 1rem;\n    }\n}"],sourceRoot:""}]);const o=r},1872:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,".ship {\n    min-height: 100px;\n    background-repeat: no-repeat;\n    background-size: 100%;\n}\n\n.ship_2 {\n    width: calc(1000px / 10 * 2);\n}\n\n.ship_3,\n.ship_3B {\n    width: calc(1000px / 10 * 3);\n}\n\n.ship_4 {\n    width: calc(1000px / 10 * 4);\n}\n\n.ship_5 {\n    width: calc(1000px / 10 * 5);\n}\n\n.ship_2.vertical {\n    transform: translateY(-50%) translateX(-30%) rotate(90deg);\n}\n\n.ship_3.vertical {\n    transform: translateY(-100%) translateX(-30%) rotate(90deg);\n}\n\n.ship_3B.vertical {\n    transform: translateY(-100%) translateX(-40%) rotate(90deg);\n}\n\n.ship_4.vertical {\n    transform: translateY(-146%) translateX(-40%) rotate(90deg);\n}\n\n.ship_5.vertical {\n    transform: translateY(-200%) translateX(-44%) rotate(90deg);\n}\n\n.triggered_drag {\n    cursor: move;\n    position: absolute;\n    pointer-events: none;\n}\n\n.triggered_drag::after {\n    position: absolute;\n    top: -100px;\n    z-index: 2;\n    content: 'Tap twice/press â‡§SHIFT to rotate!';\n    text-align: center;\n    font-family: 'Shaun_the_Sheep';\n    animation: accentuate 1.5s linear;\n    background-color: rgba(240, 86, 114, 0.596);\n    border-radius: 20px;\n    font-size: 2rem;\n    width: 200px;\n}","",{version:3,sources:["webpack://./src/css/ships/ships.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,4BAA4B;IAC5B,qBAAqB;AACzB;;AAEA;IACI,4BAA4B;AAChC;;AAEA;;IAEI,4BAA4B;AAChC;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,0DAA0D;AAC9D;;AAEA;IACI,2DAA2D;AAC/D;;AAEA;IACI,2DAA2D;AAC/D;;AAEA;IACI,2DAA2D;AAC/D;;AAEA;IACI,2DAA2D;AAC/D;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,UAAU;IACV,4CAA4C;IAC5C,kBAAkB;IAClB,8BAA8B;IAC9B,iCAAiC;IACjC,2CAA2C;IAC3C,mBAAmB;IACnB,eAAe;IACf,YAAY;AAChB",sourcesContent:[".ship {\n    min-height: 100px;\n    background-repeat: no-repeat;\n    background-size: 100%;\n}\n\n.ship_2 {\n    width: calc(1000px / 10 * 2);\n}\n\n.ship_3,\n.ship_3B {\n    width: calc(1000px / 10 * 3);\n}\n\n.ship_4 {\n    width: calc(1000px / 10 * 4);\n}\n\n.ship_5 {\n    width: calc(1000px / 10 * 5);\n}\n\n.ship_2.vertical {\n    transform: translateY(-50%) translateX(-30%) rotate(90deg);\n}\n\n.ship_3.vertical {\n    transform: translateY(-100%) translateX(-30%) rotate(90deg);\n}\n\n.ship_3B.vertical {\n    transform: translateY(-100%) translateX(-40%) rotate(90deg);\n}\n\n.ship_4.vertical {\n    transform: translateY(-146%) translateX(-40%) rotate(90deg);\n}\n\n.ship_5.vertical {\n    transform: translateY(-200%) translateX(-44%) rotate(90deg);\n}\n\n.triggered_drag {\n    cursor: move;\n    position: absolute;\n    pointer-events: none;\n}\n\n.triggered_drag::after {\n    position: absolute;\n    top: -100px;\n    z-index: 2;\n    content: 'Tap twice/press â‡§SHIFT to rotate!';\n    text-align: center;\n    font-family: 'Shaun_the_Sheep';\n    animation: accentuate 1.5s linear;\n    background-color: rgba(240, 86, 114, 0.596);\n    border-radius: 20px;\n    font-size: 2rem;\n    width: 200px;\n}"],sourceRoot:""}]);const o=r},2430:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,"@keyframes accentuate {\n    0% {\n        color: red;\n        opacity: 0;\n    }\n\n    100% {\n        color: black;\n        opacity: 1;\n    }\n}","",{version:3,sources:["webpack://./src/css/ships/ships_animations.css"],names:[],mappings:"AAAA;IACI;QACI,UAAU;QACV,UAAU;IACd;;IAEA;QACI,YAAY;QACZ,UAAU;IACd;AACJ",sourcesContent:["@keyframes accentuate {\n    0% {\n        color: red;\n        opacity: 0;\n    }\n\n    100% {\n        color: black;\n        opacity: 1;\n    }\n}"],sourceRoot:""}]);const o=r},8477:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a)()(s());r.push([n.id,"@media (min-width: 1000px) and (max-width: 3000px) {\n    .ship {\n        min-height: 50px;\n    }\n\n    .ship_2 {\n        width: calc(500px / 10 * 2);\n    }\n\n    .ship_3,\n    .ship_3B {\n        width: calc(500px / 10 * 3);\n    }\n\n    .ship_4 {\n        width: calc(500px / 10 * 4);\n    }\n\n    .ship_5 {\n        width: calc(500px / 10 * 5);\n    }\n}\n\n@media (min-width: 0px) and (max-width: 1000px) {\n    .ship {\n        min-height: 35px;\n    }\n\n    .ship_2 {\n        width: calc(350px / 10 * 2);\n    }\n\n    .ship_3,\n    .ship_3B {\n        width: calc(350px / 10 * 3);\n    }\n\n    .ship_4 {\n        width: calc(350px / 10 * 4);\n    }\n\n    .ship_5 {\n        width: calc(350px / 10 * 5);\n    }\n}","",{version:3,sources:["webpack://./src/css/ships/ships_media.css"],names:[],mappings:"AAAA;IACI;QACI,gBAAgB;IACpB;;IAEA;QACI,2BAA2B;IAC/B;;IAEA;;QAEI,2BAA2B;IAC/B;;IAEA;QACI,2BAA2B;IAC/B;;IAEA;QACI,2BAA2B;IAC/B;AACJ;;AAEA;IACI;QACI,gBAAgB;IACpB;;IAEA;QACI,2BAA2B;IAC/B;;IAEA;;QAEI,2BAA2B;IAC/B;;IAEA;QACI,2BAA2B;IAC/B;;IAEA;QACI,2BAA2B;IAC/B;AACJ",sourcesContent:["@media (min-width: 1000px) and (max-width: 3000px) {\n    .ship {\n        min-height: 50px;\n    }\n\n    .ship_2 {\n        width: calc(500px / 10 * 2);\n    }\n\n    .ship_3,\n    .ship_3B {\n        width: calc(500px / 10 * 3);\n    }\n\n    .ship_4 {\n        width: calc(500px / 10 * 4);\n    }\n\n    .ship_5 {\n        width: calc(500px / 10 * 5);\n    }\n}\n\n@media (min-width: 0px) and (max-width: 1000px) {\n    .ship {\n        min-height: 35px;\n    }\n\n    .ship_2 {\n        width: calc(350px / 10 * 2);\n    }\n\n    .ship_3,\n    .ship_3B {\n        width: calc(350px / 10 * 3);\n    }\n\n    .ship_4 {\n        width: calc(350px / 10 * 4);\n    }\n\n    .ship_5 {\n        width: calc(350px / 10 * 5);\n    }\n}"],sourceRoot:""}]);const o=r},1402:(n,e,t)=>{"use strict";t.d(e,{Z:()=>S});var i=t(7537),s=t.n(i),a=t(3645),r=t.n(a),o=t(2006),A=t(8439),c=t(8670),d=t(6794),p=t(1556),h=t(581),l=t(2140),u=t(3887),g=t(2298),m=t(1872),C=t(2430),B=t(8477),f=t(5820),b=t(8705),I=t(6603),_=t(9571),x=t(2671),w=t(7879),k=t(2471),y=t(9067),v=r()(s());v.i(o.Z),v.i(A.Z),v.i(c.Z),v.i(d.Z),v.i(p.Z),v.i(h.Z),v.i(l.Z),v.i(u.Z),v.i(g.Z),v.i(m.Z),v.i(C.Z),v.i(B.Z),v.i(f.Z),v.i(b.Z),v.i(I.Z),v.i(_.Z),v.i(x.Z),v.i(w.Z),v.i(k.Z),v.i(y.Z),v.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const S=v},3645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,s,a){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(i)for(var o=0;o<this.length;o++){var A=this[o][0];null!=A&&(r[A]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);i&&r[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),s&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=s):d[4]="".concat(s)),e.push(d))}},e}},1667:n=>{"use strict";n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},7537:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(s," */"),r=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(r).concat([a]).join("\n")}return[e].join("\n")}},3379:n=>{"use strict";var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},r=[],o=0;o<n.length;o++){var A=n[o],c=i.base?A[0]+i.base:A[0],d=a[c]||0,p="".concat(c," ").concat(d);a[c]=d+1;var h=t(p),l={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==h)e[h].references++,e[h].updater(l);else{var u=s(l,i);i.byIndex=o,e.splice(o,0,{identifier:p,updater:u,references:1})}r.push(p)}return r}function s(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,s){var a=i(n=n||[],s=s||{});return function(n){n=n||[];for(var r=0;r<a.length;r++){var o=t(a[r]);e[o].references--}for(var A=i(n,s),c=0;c<a.length;c++){var d=t(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{"use strict";var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},9216:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},3565:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},7795:n=>{"use strict";n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var s=void 0!==t.layer;s&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,s&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},4589:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},3444:(n,e,t)=>{var i={"./P1/P1_2.png":8894,"./P1/P1_3.png":9397,"./P1/P1_3B.png":6806,"./P1/P1_4.png":4637,"./P1/P1_5.png":4667,"./P2/P2_2.png":2488,"./P2/P2_3.png":2639,"./P2/P2_3B.png":969,"./P2/P2_4.png":7623,"./P2/P2_5.png":2712};function s(n){var e=a(n);return t(e)}function a(n){if(!t.o(i,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return i[n]}s.keys=function(){return Object.keys(i)},s.resolve=a,n.exports=s,s.id=3444},4099:(n,e,t)=>{var i={"./P1/P1_2/P1_2_a.png":1570,"./P1/P1_2/P1_2_b.png":3839,"./P1/P1_3/P1_3_a.png":3704,"./P1/P1_3/P1_3_b.png":1,"./P1/P1_3/P1_3_c.png":8787,"./P1/P1_3B/P1_3B_a.png":2596,"./P1/P1_3B/P1_3B_b.png":8636,"./P1/P1_3B/P1_3B_c.png":8174,"./P1/P1_4/P1_4_a.png":6637,"./P1/P1_4/P1_4_b.png":1790,"./P1/P1_4/P1_4_c.png":1416,"./P1/P1_4/P1_4_d.png":3467,"./P1/P1_5/P1_5_a.png":5425,"./P1/P1_5/P1_5_b.png":8053,"./P1/P1_5/P1_5_c.png":740,"./P1/P1_5/P1_5_d.png":9813,"./P1/P1_5/P1_5_e.png":7012,"./P2/P2_2/P2_2_a.png":1999,"./P2/P2_2/P2_2_b.png":2117,"./P2/P2_3/P2_3_a.png":1120,"./P2/P2_3/P2_3_b.png":206,"./P2/P2_3/P2_3_c.png":1618,"./P2/P2_3B/P2_3B_a.png":5195,"./P2/P2_3B/P2_3B_b.png":1580,"./P2/P2_3B/P2_3B_c.png":3134,"./P2/P2_4/P2_4_a.png":847,"./P2/P2_4/P2_4_b.png":175,"./P2/P2_4/P2_4_c.png":6869,"./P2/P2_4/P2_4_d.png":4846,"./P2/P2_5/P2_5_a.png":3054,"./P2/P2_5/P2_5_b.png":2442,"./P2/P2_5/P2_5_c.png":6771,"./P2/P2_5/P2_5_d.png":9297,"./P2/P2_5/P2_5_e.png":1658};function s(n){var e=a(n);return t(e)}function a(n){if(!t.o(i,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return i[n]}s.keys=function(){return Object.keys(i)},s.resolve=a,n.exports=s,s.id=4099},7598:(n,e,t)=>{var i={"./P1/P1_2/P1_2_a.png":9970,"./P1/P1_2/P1_2_b.png":5518,"./P1/P1_3/P1_3_a.png":3936,"./P1/P1_3/P1_3_b.png":5811,"./P1/P1_3/P1_3_c.png":3417,"./P1/P1_3B/P1_3B_a.png":813,"./P1/P1_3B/P1_3B_b.png":6146,"./P1/P1_3B/P1_3B_c.png":2426,"./P1/P1_4/P1_4_a.png":8899,"./P1/P1_4/P1_4_b.png":9188,"./P1/P1_4/P1_4_c.png":2174,"./P1/P1_4/P1_4_d.png":4539,"./P1/P1_5/P1_5_a.png":6130,"./P1/P1_5/P1_5_b.png":2404,"./P1/P1_5/P1_5_c.png":8243,"./P1/P1_5/P1_5_d.png":7561,"./P1/P1_5/P1_5_e.png":2952,"./P2/P2_2/P2_2_a.png":7035,"./P2/P2_2/P2_2_b.png":8923,"./P2/P2_3/P2_3_a.png":1583,"./P2/P2_3/P2_3_b.png":7682,"./P2/P2_3/P2_3_c.png":535,"./P2/P2_3B/P2_3B_a.png":3692,"./P2/P2_3B/P2_3B_b.png":4193,"./P2/P2_3B/P2_3B_c.png":2731,"./P2/P2_4/P2_4_a.png":8575,"./P2/P2_4/P2_4_b.png":593,"./P2/P2_4/P2_4_c.png":24,"./P2/P2_4/P2_4_d.png":1205,"./P2/P2_5/P2_5_a.png":946,"./P2/P2_5/P2_5_b.png":6444,"./P2/P2_5/P2_5_c.png":3793,"./P2/P2_5/P2_5_d.png":9511,"./P2/P2_5/P2_5_e.png":8354};function s(n){var e=a(n);return t(e)}function a(n){if(!t.o(i,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return i[n]}s.keys=function(){return Object.keys(i)},s.resolve=a,n.exports=s,s.id=7598},6536:(n,e,t)=>{var i={"./body/body_background.jpg":[3713],"./grid/1.jpg":[4998,998],"./grid/2.jpg":[1261,261],"./intro/landscape.jpg":[4188,188],"./intro/mobile_landscape.jpg":[2708,708],"./selection/1.jpg":[1551,551],"./selection/2.jpg":[4234,234]};function s(n){if(!t.o(i,n))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=i[n],s=e[0];return Promise.all(e.slice(1).map(t.e)).then((()=>t.t(s,17)))}s.keys=()=>Object.keys(i),s.id=6536,n.exports=s},8123:(n,e,t)=>{"use strict";const i=n=>document.createElement(n),s=(n,e)=>{const t=n;return t.setAttribute("class",e),t},a=(n,e,t)=>t?((n,e)=>{const t=n;return Object.entries(e).forEach((([n,e])=>{var i;i=n,["innerHTML","innerText","textContent","innerWidth","value"].find((n=>n===i))?t[n]=e:(n=>!!["backgroundImage","backgroundColor"].find((e=>e===n)))(n)?t.style[n]=e:t.setAttributeNS(null,n,e)})),t})(s(i(n),e),t):s(i(n),e);async function r(n){return(await t(6536)(`./${n}/${this.player}.jpg`)).default}const o=document.querySelector("body"),A=(n,e=0,t=9)=>n[0]>=e&&n[0]<=t&&n[1]>=e&&n[1]<=t,c=([n,e],t,i)=>{const s=[];return s.push(A([n,e]),!(([n,e],t)=>{if(t)return!!t.find((t=>t[0]===n&&t[1]===e))})([n,e],t),!(([n,e],t)=>{if(t)return!!t.find((t=>t[0]===n&&t[1]===e))})([n,e],i)),!0===s[0]&&!0===s[1]&&!0===s[2]},d=([n,e],t)=>{if(n>=0&&e>=0){const{ship:i}=t[Object.keys(t).find((i=>t[i].coordinates.find((t=>t[0]===n&&t[1]===e))))];return i}},p=(n,e)=>new Array(2).fill("").map((()=>Math.floor(Math.random()*(n-e+1)+e))),h=(n,e)=>{const t=p(9,0);return c(t,n,e)?t:h(n,e)},l=n=>{n.forEach((n=>{for(;n.length;)n.pop()}))},u=(n,e)=>n.push((n=>n.shift())(e)),g=(n,e,t)=>({left:[n[0]-(t||1),n[1]],right:[n[0]+(t||1),n[1]],top:[n[0],n[1]+(t||1)],bottom:[n[0],n[1]-(t||1)]}[e]),m=(n,e,t)=>{n.push(...((n,e)=>n.filter((n=>!!c(n,e.missedShots,e.successfulShots))))((n=>[g(n,"left"),g(n,"right"),g(n,"top"),g(n,"bottom")])(e),t))},C=n=>n.shift(),B=(n,e)=>n[0]===e[0]?n[1]>e[1]?"top":"bottom":n[0]>e[0]?"right":"left",f=(n,e,t)=>{const i=e.reduce(((e,i,s)=>(((n,e,t)=>({left:n[0]<e[0]&&n[1]===e[1],right:n[0]>e[0]&&n[1]===e[1],top:n[0]===e[0]&&n[1]>e[1],bottom:n[0]===e[0]&&n[1]<e[1]}[t]))(i,n,t)&&e.push(s),e.sort().reverse())),[]);i.forEach((n=>{e.splice(n,1)}))},b=(n,e)=>n.push((n=>n[0])(e)),I=()=>{const n=[],e=[],t=[],i=[],s=[],a=[],r=[],o=[],A=[],p=[],I=e=>{if(!(n=>n.isSunk())(r[0]))return e&&((n,e,t,i,s,a)=>{l([n]);const r=((n,e)=>n.filter((n=>c(n,e.missedShots,e.successfulShots))))(((n,e,t,i)=>{const s=[],a=[];for(let r=1;r<=n.length-2;r+=1)s.push(g(t,i,r)),a.push(g(e,{left:"right",right:"left",top:"bottom",bottom:"top"}[i],r));return s.concat(a)})(e,t,i,s),a);n.push(...r)})(p,r[0],o[0],s[0],B(t[0],o[0]),n[0]),l([t]),b(t,p),!0};return{generateCoordinates:c=>{if(((n,e)=>{l([n]),n.push(e)})(n,c),((n,e,t)=>{l([e,n]),e.push(t.successfulShots[0]),e[0]&&n.push(d(e[0],t.shipsHistory))})(a,s,c),(()=>{if((n=>!n)(s[0]))return!0})())return h(n[0].missedShots,n[0].successfulShots);if((()=>{if(((n,e)=>e.find((e=>e===n)))(a[0],A))return l([t]),u(t,e),!0})())return e.length?t[0]:(console.log("hi"),h(n[0].missedShots,n[0].successfulShots));if((()=>{if(!(n=>n.length)(r))return((n,e)=>{n.push(e)})(r,a[0]),((n,e)=>{n.push(e)})(o,s[0]),m(e,o[0],n[0]),l([t]),u(t,e),!0})())return t[0];if((()=>{if(!((n,e)=>n===e)(a[0],r[0]))return((n,e,t)=>{t||e.push(n)})(s[0],i,((n,e,t,i=d)=>!!e.find((e=>i(e,t)===i(n,t))))(s[0],i,n[0].shipsHistory)),(n=>n.length)(p)?(f(o[0],p,B(t[0],o[0])),l([t]),b(t,p)):(l([t]),u(t,e)),!0})())return t[0];if((()=>{if(((n,e)=>n[0]===e[0]&&n[1]===e[1])(s[0],o[0]))return l([t]),u(t,e),!0})())return t[0];if((()=>{if(((n,e)=>{if(e.length)return n[0]===e[0][0]&&n[1]===e[0][1]})(t[0],p))return!0})()){if((()=>{if(((n,e)=>{if(n)return!!n.find((n=>n[0]===e[0]&&n[1]===e[1]))})(n.missedShots,t[0]))return C(p),f(o[0],p,B(t[0],o[0])),l([t]),b(t,p),!0})())return t[0];if(C(p),I())return t[0]}return I(!0)?t[0]:(((n,e)=>{e.push(n)})(r[0],A),l([r,o,e,p,t]),(()=>{if((n=>!!n[0])(i))return((n,e)=>{const t=n.filter((n=>d(n,e).isSunk())).map(((n,e)=>e)).reverse();t.length&&t.forEach((e=>n.splice(e,1)))})(i,n[0].shipsHistory),((n,e)=>{n.push((n=>n.shift())(e))})(o,i),((n,e,t)=>{n.push(d(e,t.shipsHistory))})(r,o[0],n[0]),m(e,o[0],n[0]),l([t]),u(t,e),!0})()?t[0]:h(n[0].missedShots,n[0].successfulShots))}}},_=(n,e,t=!0)=>{let i=!1;const s=I();return{gameboard:n,setTurn:()=>{i=!0},getTurn:()=>i,isComputer:t,attackOpponent:(n=s.generateCoordinates(e))=>(e.receiveAttack(n)&&(i=!i),n)}};class x{constructor(n,e){this.player=(n>2?1:n)||1,this.origin=e||o}fetchShipsImages(){const n=new RegExp(`P${this.player}_\\d?\\w.png`),e={};return t(3444).keys().filter((e=>e.match(n))).forEach((n=>{e[n.match(/P\d_\d?\w/)]=t(3444)(n)})),e}static fetchDividedShipsImages(n,e){const i=new RegExp(`P${n}_\\d?\\w_\\w.png`),s={};return e?t(4099).keys().filter((n=>n.match(i))).forEach((n=>{s[n.match(/P\d_\d?\w_\w/)]=t(4099)(n)})):t(7598).keys().filter((n=>n.match(i))).forEach((n=>{s[n.match(/P\d_\d?\w_\w/)]=t(7598)(n)})),s}static isHorizontal(n){const e=n.map((n=>Number(n[1]))),t=e[0];return e.every((n=>n===t))}append(){for(let n=0;n<this.shipsIDs.length;n+=1)this.origin.append(this[`ship${this.shipsIDs[n]}`])}create(){this.shipsImages=this.fetchShipsImages(),this.shipsIDs=Object.keys(this.shipsImages);for(let n=0;n<this.shipsIDs.length;n+=1)this[`ship${this.shipsIDs[n]}`]=a("div",`ship ship${this.shipsIDs[n].match(/_\d?\w/)}`,{"data-name":`ship_${this.shipsIDs[n]}`,"data-length":this.shipsIDs[n].match(/(?!\d_)\d/),style:`background-image:url(${this.shipsImages[this.shipsIDs[n]]})`})}render(){this.create(),this.append()}}class w{constructor(n,e){this.player=(n>2?1:n)||1,this.origin=e||o}async create(){this.grid=a("div","grid",{style:`background-image: url(${await r.call(this,"grid")}`,"data-player":this.player,"data-type":"grid"})}populateGrid(){for(let n=9;n>=0;n-=1)for(let e=0;e<=9;e+=1){const t=a("div","grid__square",{"data-x":e,"data-y":n,"data-type":"square"});this.grid.append(t)}}static hideGrid(n,e,t){1===t?(n.classList.remove("appear"),n.classList.remove("swooshin"),n.classList.add("swooshout"),setTimeout((()=>n.classList.add("disappear")),1e3)):(e.classList.remove("appear"),e.classList.remove("swooshin"),e.classList.add("swooshout"),setTimeout((()=>e.classList.add("disappear")),1e3))}static showGrid(n,e,t){1===t?(n.classList.remove("disappear"),n.classList.remove("swooshout"),n.classList.add("appear"),n.classList.add("swooshin")):(e.classList.remove("disappear"),e.classList.remove("swooshout"),e.classList.add("appear"),e.classList.add("swooshin"))}static removeAppearanceClasses(n,e,t){1===t?(n.classList.remove("appear"),n.classList.remove("disappear")):2===t?(e.classList.remove("appear"),e.classList.remove("disappear")):(n.classList.remove("appear"),n.classList.remove("disappear"),e.classList.remove("appear"),e.classList.remove("disappear"),n.classList.remove("swooshout"),n.classList.remove("swooshin"),e.classList.remove("swooshout"),e.classList.remove("swooshin"))}static fetchGridSquares(n){return n?[...this.grid.children]:[...document.querySelectorAll('[data-type*="square"')]}static recordOccupiedSquares(){return w.fetchGridSquares().filter((n=>n.dataset.ship)).reduce(((n,e)=>(n[e.dataset.ship]||(n[e.dataset.ship]={coordinates:[],direction:void 0},n[e.dataset.ship].direction=!0===JSON.parse(e.dataset.vertical)||"horizontal"),n[e.dataset.ship].coordinates.push([Number(e.dataset.x),Number(e.dataset.y)]),n)),{})}static positioningComplete(){return 17===w.fetchGridSquares().filter((n=>n.dataset.ship)).length}positionSavedShips(n){const e=Object.keys(n).map((e=>[e,n[e].coordinates])),t=["a","b","c","d","e"];e.forEach((n=>{const e=x.fetchDividedShipsImages(this.player,x.isHorizontal(n[1]));for(let i=0;i<n[1].length;i+=1){const s=w.fetchGridSquares.call(this,!0).find((e=>Number(e.dataset.x)===n[1][i][0]&&Number(e.dataset.y)===n[1][i][1]));s&&([s.dataset.ship]=n);const a=e[`P${this.player}_${n[0]}_${t[i]}`];s.style.backgroundImage=`url(${a})`}}))}static displaySquare(n){n.classList.remove("hide")}static animateSquare(n){n.dataset.ship?(n.classList.add("hitShip"),setTimeout(w.displaySquare,2e3,n)):n.classList.add("missedShip")}static disanimateSquare(n){n.dataset.ship?(n.classList.remove("hitShip"),n.classList.add("staticHitShip")):(n.classList.remove("missedShip"),n.classList.add("staticMissedShip"))}static toggleSquaresVisibility(){w.fetchGridSquares().forEach((n=>n.classList.add("hide")))}static toggleInput(n,e,t){1===n?(e.grid.classList.add("disabled_input"),w.fetchGridSquares.call(e,!0).forEach((n=>n.classList.add("disabled_input"))),t.grid.classList.remove("disabled_input"),w.fetchGridSquares.call(t,!0).forEach((n=>n.classList.remove("disabled_input")))):(t.grid.classList.add("disabled_input"),w.fetchGridSquares.call(t,!0).forEach((n=>n.classList.add("disabled_input"))),e.grid.classList.remove("disabled_input"),w.fetchGridSquares.call(e,!0).forEach((n=>n.classList.remove("disabled_input"))))}append(){this.origin.append(this.grid)}async render(){await this.create(),this.populateGrid(),this.append()}}function k(n){let e=0;return{length:n,hit:()=>(e+=1,e),isSunk:()=>e===n}}const y=n=>5===Object.keys(n).length,v=(n,e)=>3===e&&!!n[3]&&!n["3B"],S=(n,e)=>!v(n,e)&&!!n[e],P=n=>n>=2&&n<=5,E=([n,e],t,i,s=A)=>{const a=[n,e];for(let n=1;n<t;n+=1)i?a[1]-=1:a[0]+=1;return!!s(a)},Q=n=>Object.values(n).map((n=>n.coordinates)).flat(),L=n=>Object.values(n).map((n=>n.ship)),q=([n,e],t,i,s)=>{const a=[n,e],r=()=>s.find((n=>n[0]===a[0]&&n[1]===a[1]));for(let n=1;n<t&&!r();n+=1)i?a[1]-=1:a[0]+=1;return r()},T=([n,e],t,i,s,a=y,r=S,o=P,A=E,c=q)=>!(a(t)||r(t,i)||!o(i)||!A([n,e],i,s)||c([n,e],i,s,Q(t))),Y=n=>!!n.every((n=>!!n.isSunk()));function j(){const n={},e=[],t=[],i=([n,e],t,i)=>{const s=[],a=[n,e];for(let n=0;n<t;n+=1)s.push([a[0],a[1]]),i?a[1]-=1:a[0]+=1;return s},s=(e=k((()=>Math.floor(4*Math.random()+2))()),t=p(0,9),a=(()=>Math.random()>.5)())=>{const r=()=>!("horizontal"===a||!a)&&a;return T(t,n,e.length,r())?(((e,t,s)=>{n[v(n,t.length)?"3B":t.length]={ship:t,coordinates:i(e,t.length,s)}})(t,e,r()),!0):s()};return{positionShip:s,receiveAttack:i=>{const s=c(i,e,t);return s&&((([n,e],t)=>!!t.find((t=>t[0]===n&&t[1]===e)))(i,Q(n))?((([e,t])=>{const i=(([n,e],t)=>{if(n>=0&&e>=0){const i=Object.keys(t).find((i=>t[i].coordinates.find((t=>t[0]===n&&t[1]===e))));return"3B"===i?i:Number(i)}})([e,t],n);n[i].ship.hit()})(i),(([n,e])=>{t.unshift([n,e])})(i)):(([n,t])=>{e.unshift([n,t])})(i)),s},shipsHistory:n,successfulShots:t,missedShots:e}}class D{constructor(n,e){this.player=(n>2?1:n)||1,this.origin=e||o}async create(){this.space=a("div","selection_space",{style:`background-image: url(${await r.call(this,"selection")})`})}append(){this.origin.append(this.space)}async render(){await this.create(),this.append()}}class U{constructor(){this.squares=[...document.querySelectorAll(".grid__square")],this.ships=[...document.querySelectorAll(".ship")],this.adjacentSquares=[],this.currentShip=void 0,this.isVertical=!1,this.isListening=!1,this.staticShipPosition=void 0,this.dynamicShipPosition=void 0,this.latestTap=void 0}manageDrags(){this.createBoundListeners(),this.addEventListeners()}createBoundListeners(){this.triggerDragEvent=this.triggerDrag.bind(this),this.mouseOverSquareEvent=this.mouseOverSquare.bind(this),this.mouseOutSquareEvent=this.mouseOutSquare.bind(this),this.rotateShipEvent=this.rotateShip.bind(this),this.moveDragEvent=this.moveDrag.bind(this),this.endDragEvent=this.endDrag.bind(this)}addEventListeners(){document.addEventListener("mousedown",this.triggerDragEvent),document.addEventListener("touchstart",this.triggerDragEvent,{passive:!0}),document.addEventListener("mouseover",this.mouseOverSquareEvent),document.addEventListener("mouseout",this.mouseOutSquareEvent),document.addEventListener("keydown",this.rotateShipEvent),document.addEventListener("mousemove",this.moveDragEvent),document.addEventListener("touchmove",this.moveDragEvent,{passive:!1}),document.addEventListener("mouseup",this.endDragEvent),document.addEventListener("touchend",this.endDragEvent),document.addEventListener("touchend",this.checkDoubleTap.bind(this))}triggerDrag(n){n.preventDefault(),this.filterEvents(n.target,"ship")&&(this.preventDefault(n),this.toggleListening(),this.setCurrentShip(n.target),this.removeShipMark(),this.setShipPosition(),this.updateShipStyle())}checkForDoubleTaps(){}preventDefault(n){n.preventDefault()}filterEvents(n,e){return"ship"===e?this.ships.find((e=>e===n)):this.squares.find((e=>e===n))}toggleListening(){this.isListening=!this.isListening}setCurrentShip(n){this.currentShip=n}setShipPosition(){this.staticShipPosition=[this.currentShip.offsetLeft,this.currentShip.offsetTop]}updateShipStyle(){this.isListening&&(this.isVertical?this.addVerticality():this.disableVerticality(!0),this.currentShip.classList.add("triggered_drag"))}mouseOverSquare(n){const e=this.filterEvents(n.target,"square");this.isListening&&e&&(this.preventDefault(n),this.recordAdjacentSquares(n.target),this.displaySquaresValidity(n))}touchOverSquare(n){const e=this.filterEvents(n,"square");this.isListening&&e&&(this.removeSquareStyles(),this.removeRecordedSquares(),this.recordAdjacentSquares(n),this.displaySquaresValidity(n))}recordAdjacentSquares(n){for(let e=0;e<this.currentShip.dataset.length;e+=1){const t=this.getAdjacentSquares(n,e);t&&!this.adjacentSquares.includes(t)&&this.adjacentSquares.push(t)}}getAdjacentSquares(n,e){return this.squares.find((t=>this.isVertical?+t.dataset.x==+n.dataset.x&&+t.dataset.y===+n.dataset.y+e:+t.dataset.x===+n.dataset.x+e&&+t.dataset.y==+n.dataset.y))}displaySquaresValidity(n){this.isValidMove(n.target||n)?this.addValidSquareStyle():this.addInvalidSquareStyle()}isValidMove(n){const e=this.checkSquaresLength(),t=this.checkSquaresSpace(n);return e&&t}checkSquaresLength(){return this.adjacentSquares.length===+this.currentShip.dataset.length}checkSquaresSpace(n){const e=this.checkParkedShip(n),t=this.checkCollisionRisk(n);return!e&&!t}checkParkedShip(n){return n.dataset.ship}checkCollisionRisk(n){let e;for(let t=0;t<+this.currentShip.dataset.length&&(e=this.getColliders(n,t),!e);t+=1);return e}getColliders(n,e){return this.squares.find((t=>this.isVertical?t.dataset.x===n.dataset.x&&+t.dataset.y===+n.dataset.y+e&&t.dataset.ship:+t.dataset.x===+n.dataset.x+e&&t.dataset.y===n.dataset.y&&t.dataset.ship))}addValidSquareStyle(){this.adjacentSquares.forEach((n=>n.classList.add("dragover")))}addInvalidSquareStyle(){this.adjacentSquares.forEach((n=>n.classList.add("invalid")))}removeSquareStyles(){this.adjacentSquares.forEach((n=>{n.classList.remove("dragover"),n.classList.remove("invalid")}))}mouseOutSquare(n){const e=this.filterEvents(n.target,"square");this.isListening&&e&&(this.preventDefault(n),this.removeSquareStyles(),this.removeRecordedSquares())}removeRecordedSquares(){this.adjacentSquares=[]}rotateShip(n){this.isListening&&this.rotationKeyPressed(n)&&this.toggleVerticality()}checkDoubleTap(n){const e=(new Date).getTime()-this.latestTap;e<200&&e>0&&this.toggleVerticality(n.target),this.latestTap=(new Date).getTime()}rotationKeyPressed(n){return"Shift"===n.key}toggleVerticality(n){this.isVertical=!this.isVertical,n&&n.classList.toggle("vertical"),this.currentShip.classList.toggle("vertical")}addVerticality(){this.currentShip.classList.add("vertical")}disableVerticality(n){this.isVertical=!1,n&&this.currentShip.classList.remove("vertical")}moveDrag(n){this.isListening&&(n.touches&&(this.preventDefault(n),this.touchOverSquare(document.elementFromPoint(n.touches[0].clientX,n.touches[0].clientY))),this.preventDefault(n),this.updateShipPosition(n))}updateShipPosition(n){"square"===this.currentShip.parentNode.dataset.type&&(this.currentShip.parentNode.style.position="static"),this.currentShip.style.top=`${n.clientY||n.touches[0].clientY}px`,this.currentShip.style.left=`${n.clientX||n.touches[0].clientX}px`}endDrag(n){this.isListening&&(this.toggleListening(),this.removeActiveListeners(),this.manageShipPlacement(n),this.removeSquareStyles(),this.addEventListeners())}validDropZone(n){return n.target?"square"===n.target.dataset.type:"square"===n.dataset.type}manageShipPlacement(n){let e,t;n.touches&&(t=document.elementFromPoint(n.target.offsetLeft,n.target.offsetTop)),t&&(e="square"===t.dataset.type),this.validDropZone(e?t:n)&&this.isValidMove(e?t:n.target)?(this.removeShipFromStartingPosition(),this.addDropStyles(e?t:n),this.appendShipToSquare(e?t:n),this.markShipPosition()):(this.resetShipPosition(),this.disableVerticality(!0))}appendShipToSquare(n){n.target?n.target.append(this.currentShip):n.append(this.currentShip)}addDropStyles(n){this.currentShip.classList.remove("triggered_drag"),n.target?n.target.style.position="relative":n.style.position="relative",this.currentShip.style.top="0px",this.currentShip.style.left="0px",this.currentShip.style.bottom="0px",this.currentShip.style.right="0px",this.currentShip.style.position="absolute"}removeShipFromStartingPosition(){this.currentShip.parentNode.removeChild(this.currentShip)}markShipPosition(){this.adjacentSquares.forEach((n=>{n.dataset.ship=this.currentShip.dataset.name,n.dataset.vertical=this.isVertical}))}resetShipPosition(){this.currentShip.style.top=`${this.staticShipPosition[0].toString()}px`,this.currentShip.style.left=`${this.staticShipPosition[1].toString()}px`,this.currentShip.classList.remove("triggered_drag")}removeShipMark(){this.squares.forEach((n=>{n.dataset.ship===this.currentShip.dataset.name&&(delete n.dataset.ship,delete n.dataset.imgpart)}))}removeActiveListeners(){document.removeEventListener("mousedown",this.triggerDragEvent),document.removeEventListener("mousemove",this.moveDragEvent),document.removeEventListener("keydown",this.rotateShipEvent),document.removeEventListener("mouseup",this.endDragEvent)}}class z{constructor(n){this.player=n||1,this.grid=void 0,this.selectionSpace=void 0,this.ships=void 0,this.dragInterface=void 0}async createGrid(){this.grid=new w(this.player,this.background),await this.grid.render()}async createSelectionSpace(){this.selectionSpace=new D(this.player,this.background),await this.selectionSpace.render()}createSelectionTitle(){const n=a("div","selection__title__container");["P","L","A","C","E","*","Y","O","U","R","*","S","H","E","E","P","S"].forEach((e=>{n.append(a("h1","selection__title",{innerHTML:e})),this.selectionSpace.space.append(n)}))}createShips(){this.ships=new x(this.player,this.selectionSpace.space),this.ships.render()}listenToDrags(){this.dragInterface=new U(this.selectionSpace.space),this.dragInterface.manageDrags()}async createBackground(){this.backgroundContainer=a("div","selection-screen__background-container"),this.background=a("div","selection-screen__background"),this.backgroundContainer.append(this.background),o.append(this.backgroundContainer)}async createValidationButton(){const n=await t.e(109).then(t.t.bind(t,4109,17));this.validationButton=a("input","selection-validation",{type:"image",src:n.default}),this.backgroundContainer.append(this.validationButton)}static remove(){document.querySelector(".selection-screen__background-container").remove()}async render(){await this.createBackground(),await this.createSelectionSpace(),this.createSelectionTitle(),this.createShips(),await this.createGrid(),await this.createValidationButton(),this.listenToDrags()}}class R{constructor(n,e){this.player1=n,this.player2=e,this.game=((n,e)=>(n.setTurn(),{isOver:()=>!!Y(L(n.gameboard.shipsHistory))||!!Y(L(e.gameboard.shipsHistory)),currentPlayer:()=>n.getTurn()?1:2}))(n,e),this.currentPlayer=this.game.currentPlayer()}create(){this.background=a("div","battlescreen__background"),o.append(this.background)}async createPlayer1Grid(){this.player1Grid=new w(1,this.background),await this.player1Grid.render(),this.background.append(this.player1Grid.grid)}async createPlayer2Grid(){this.player2Grid=new w(2,this.background),await this.player2Grid.render(),this.background.append(this.player2Grid.grid)}placeShips(){this.player1Grid.positionSavedShips(this.player1.gameboard.shipsHistory),this.player2Grid.positionSavedShips(this.player2.gameboard.shipsHistory)}runComputerMove(){const n=this.player2.attackOpponent(),e=w.fetchGridSquares.call(this.player1Grid,!0).find((e=>Number(e.dataset.x)===n[0]&&Number(e.dataset.y)===n[1]));e.click(),this.player1.setTurn(),setTimeout(this.animateRocket,6e3,!1),setTimeout(w.animateSquare,5e3,e),setTimeout(w.disanimateSquare,8e3,e),this.checkTurnMobileMode(!0,!1),setTimeout(w.toggleInput,8e3,this.game.currentPlayer.call(this),this.player1Grid,this.player2Grid),setTimeout(this.updateCommentatorTextAndStyle.bind(this,!0),8e3)}isSmallScreen(){return this.smallScreen=window.matchMedia("(max-width: 1300px)"),this.smallScreen.matches}checkSmallScreenMode(){this.isSmallScreen()&&(w.hideGrid(this.player1Grid.grid,this.player2Grid.grid,1),w.showGrid(this.player1Grid.grid,this.player2Grid.grid,2)),this.smallScreen.addEventListener("change",(n=>{n.matches?(w.hideGrid(this.player1Grid.grid,this.player2Grid.grid,1),w.showGrid(this.player1Grid.grid,this.player2Grid.grid,2)):w.removeAppearanceClasses(this.player1Grid.grid,this.player2Grid.grid)}))}generateRandomComments(){return this.comments=["Itâ€™s the eye of the sheep <br> Itâ€™s the dream of the fight","Oh, I wanna dance with somebody <br> I wanna feel the sheep with somebody","My milkshake brings all the sheep to the yard","All the single ladies <br> Now put your sheep up","We are the sheep, my friends <br> And weâ€™ll keep on fighting â€™til the end ","Itâ€™s a long way to the sheep <br> If you wanna rock n roll","Itâ€™s now or never <br> Come hold me sheeply, kiss me my darling","If you had, one shot <br> Would you capture it, or just let it sheep?","Billie Sheep is not my lover <br> Sheâ€™s just a sheep who claims that I am the one","Hungry like the sheep","P p p poker sheep, p p p poker sheep","Black sheep singing in the dead of night <br> Take these broken wings and learn to fly","And sheep they wanna have fun <br> Oh sheep just want to have fun","Donâ€™t, donâ€™t you want sheep?","Stop! In the name of sheep","Hit me sheepy one more time","It seems to me you lived your life <br> Like a sheep in the wind","Donâ€™t want to close my eyes <br> I donâ€™t want to fall asheep","So when youâ€™re near sheep <br> Darling canâ€™t you hear me","Hello darkness my old sheep ","It started out with a sheep <br> How did it end up like this!","Just sheep it, sheep it, sheep it, sheep it!","I walk a sheepy road <br> The only one that I have ever known","Itâ€™s fun to sheep at the Y.M.C.A!","What you gonâ€™ do with all that sheep <br> All that sheep inside your trunk! ","Pretty woman <br> Walkinâ€™ down the sheep","Goodness gracious, great sheep of fire","Sweet dreams are made of sheep <br> Who am I to disagree?","I get sheeped down <br> But I get up again.","I fell into a burning sheep of fire <br>  And the flames went higher","A little sheep of Monica in my life <br>  A little sheep of Erica by my side","At first I was afraid <br> I was sheepified","Getting born in the state of Missisheepi <br> Her papa was a sheep, her mama was a peacock","Karma, karma, karma <br> Karma sheepeleon","Just a small town sheep <br> Living in a lonely world","Love is a battlesheep","Donâ€™t stop besheepinâ€™ <br> Hold on to the feelinâ€™","Take my hand, take my whole sheep too","If you wanna be my sheep <br> You gotta get with my friends","On a dark desert highway <br> Cool sheep in my hair","Highway to the danger sheep <br> Ride into the danger sheep","When I wake up, I know Iâ€™m gonna be the sheep <br>  Who wakes up next to you","I got 99 problems but a sheep ainâ€™t one","We could have had it all <br> Rolling in the sheep","I donâ€™t believe that anybody sheeps the way I do <br> About you now","Do you remember when we used to sheep?","All I want for Sheepmas Is you, baby","Itâ€™s the final sheepdown!","Havenâ€™t you ever heard of closing a goddamn sheep?","Iâ€™m a Sheepie girl <br> In a Sheepie world","Do you ever feel, like a plastic sheep <br> Drifting through the wind","Cause Iâ€™m just a teenage sheep baby","Donâ€™t stop, make it pop DJ <br> Blow my sheep up tonight","You and I <br> Weâ€™ll be sheep forever","Some sheep once told me the world was gonna roll me","Hey now, hey now <br> This is what sheep are made of","Cause the players gonna hit, hit, hit <br> And the haters gonna miss, miss, miss","Nice to meet you, where you been <br> I can show you incredible sheep","Say it ainâ€™t so <br> I will not go turn the sheep off, carry me home","Making my way downtown, walking fast <br> Sheep pass and Iâ€™m homebound","Iâ€™m a power sheep <br> Watch me explode","Sheepinâ€™ on a prayer","Youâ€™re the sheep that I want <br> oo-oo-oo, honey","Take me on <br> Iâ€™ll be gone in a sheep or two","And my sheep will go on"],this.comments[Math.floor(Math.random()*this.comments.length)]}generateRandomColors(n){return this.pairs=[["#fef0b5ff","#f05673ff"],["#ffd008ff","#4da5a1ff"]],n?this.pairs[0]:this.pairs[1]}updateCommentatorTextAndStyle(n){this.commentator.innerHTML=`<br>${this.generateRandomComments()}<br>`;const e=this.generateRandomColors(n);[this.commentator.style.color]=e,[,this.commentatorContainer.style.backgroundColor]=e}createCommentator(){this.commentatorContainer=a("div","commentator__container"),this.commentator=a("p","commentator"),this.updateCommentatorTextAndStyle(!0),this.commentatorContainer.append(this.commentator),this.background.append(this.commentatorContainer)}checkTurnMobileMode(n,e){this.isSmallScreen()&&(setTimeout(w.hideGrid,n?8e3:2e3,this.player1Grid.grid,this.player2Grid.grid,e?2:1),setTimeout(w.showGrid,n?8e3:2e3,this.player1Grid.grid,this.player2Grid.grid,e?1:2))}async animateRocket(n){const e=n?await t.e(83).then(t.t.bind(t,9083,17)):await t.e(792).then(t.t.bind(t,2792,17));this.rocketContainer=a("div","rocket-container"),this.rocket=a("img","rocket",{src:e.default}),this.rocketContainer.append(this.rocket),setTimeout((()=>o.append(this.rocketContainer)),2e3),n?setTimeout((()=>this.rocketContainer.classList.add("flying")),2e3):setTimeout((()=>this.rocketContainer.classList.add("flyingReverse")),2e3),setTimeout((()=>this.rocketContainer.remove()),6e3)}async listenForAttacks(n){w.fetchGridSquares().forEach((e=>{e.addEventListener("click",(async t=>{1===this.game.currentPlayer()&&w.fetchGridSquares.call(this.player2Grid,!0).includes(e)&&(this.player1.attackOpponent([Number(t.target.dataset.x),Number(t.target.dataset.y)]),this.player2.setTurn(),w.animateSquare(e),setTimeout(w.disanimateSquare,3e3,e),this.checkTurnMobileMode(!1,!0),await this.animateRocket(!0),setTimeout(w.toggleInput,50,this.game.currentPlayer.call(this),this.player1Grid,this.player2Grid),setTimeout(this.updateCommentatorTextAndStyle.bind(this,!1),3e3),n&&this.runComputerMove(),this.game.isOver()&&this.createResults()),!n&&2===this.game.currentPlayer()&&w.fetchGridSquares.call(this.player1Grid,!0).includes(e)&&(this.player2.attackOpponent([Number(t.target.dataset.x),Number(t.target.dataset.y)]),this.player1.setTurn(),await this.animateRocket(!1),w.animateSquare(e),setTimeout(w.disanimateSquare,3e3,e),this.checkTurnMobileMode(!1,!1),setTimeout(w.toggleInput,50,this.game.currentPlayer.call(this),this.player1Grid,this.player2Grid),setTimeout(this.updateCommentatorTextAndStyle.bind(this,!0),3e3),this.game.isOver()&&this.createResults())}))}))}removePage(){this.background.remove()}createResults(){this.endScreen=a("div","battlescreen__endScreen"),this.endScreenText=a("p","battlescreen__endScreenText",{innerHTML:"The game is over."}),this.endScreen.classList.add("expansion"),o.append(this.endScreen),this.endScreen.append(this.endScreenText)}async render(){this.create(),await this.createPlayer1Grid(),await this.createPlayer2Grid(),this.createCommentator(),this.checkSmallScreenMode(),this.placeShips(),w.toggleSquaresVisibility(),w.toggleInput(this.game.currentPlayer(),this.player1Grid,this.player2Grid),await this.listenForAttacks(this.player2.isComputer)}}let M,O,Z,G,X,W;function J(){O.positionShip(k(2),M.ship_P1_2.coordinates[0],M.ship_P1_2.direction),O.positionShip(k(3),M.ship_P1_3.coordinates[0],M.ship_P1_3.direction),O.positionShip(k(3),M.ship_P1_3B.coordinates[0],M.ship_P1_3B.direction),O.positionShip(k(4),M.ship_P1_4.coordinates[0],M.ship_P1_4.direction),O.positionShip(k(5),M.ship_P1_5.coordinates[0],M.ship_P1_5.direction)}function V(n,e){if(n||e)for(let n=0;n<5;n+=1)Z.positionShip();else Z.positionShip(k(2),M.ship_P2_2.coordinates[0],M.ship_P2_2.direction),Z.positionShip(k(3),M.ship_P2_3.coordinates[0],M.ship_P2_3.direction),Z.positionShip(k(3),M.ship_P2_3B.coordinates[0],M.ship_P2_3B.direction),Z.positionShip(k(4),M.ship_P2_4.coordinates[0],M.ship_P2_4.direction),Z.positionShip(k(5),M.ship_P2_5.coordinates[0],M.ship_P2_5.direction)}async function N(n,e){document.querySelector(".selection-validation").addEventListener("click",(async()=>{if(w.positioningComplete())if(M=w.recordOccupiedSquares(),function(n,e){!function(n){n&&(O=j()),Z=j()}(e),function(n,e){n&&e?J():!n&&e?(J(),V(n,e)):V(n,e)}(n,e),function(n,e){e&&!n?(G=_(O,Z,!1),X=_(Z,O,!0)):(G=_(O,Z,!1),X=_(Z,O,!1))}(n,e)}(n,e),z.remove(),n){const n=new z(2);await n.render(),await N(!1,!1)}else W=new R(G,X),W.render();else alert("Please place all of your sheeps!")}))}class H{constructor(){this.twoPlayersMode=!1}createMainContainer(){this.mainContainer=a("div","intro-screen__main-container"),o.append(this.mainContainer)}async createLandscape(){this.landscape=a("div","intro-screen__landscape"),this.mainContainer.append(this.landscape)}async createTwoPlayersBubble(){this.twoPlayersImage=await t.e(939).then(t.t.bind(t,1939,17)),this.bubbleContainer=a("div","intro-screen__bubble-container"),this.bubble=a("input","intro-screen_bubble",{type:"image",src:this.twoPlayersImage.default}),this.bubbleContainer.classList.add("moving"),this.bubble.classList.add("moving"),this.bubbleContainer.append(this.bubble),this.landscape.append(this.bubbleContainer)}async createPlayButton(){this.playImage=await t.e(308).then(t.t.bind(t,308,17)),this.playButton=a("input","intro-screen__play-button",{type:"image",src:this.playImage.default}),this.landscape.append(this.playButton)}displayCurrentPlayersMode(){this.alert=a("p","intro-screen_2P_alert"),this.alert.innerHTML="TWO SHEEPS MODE ENABLED!",this.landscape.append(this.alert)}togglePlayersMode(){this.alert.classList.toggle("visibleText"),this.twoPlayersMode=!this.twoPlayersMode}removePage(){this.mainContainer.remove()}listenToBubble(){this.bubble.addEventListener("click",(()=>{this.bubble.classList.toggle("scaled"),this.togglePlayersMode()}))}async listenToPlayButton(n,e){this.playButton.addEventListener("click",(async()=>{this.removePage(),await n(),await N(e.twoPlayersMode,!0)}))}async setMobileBackground(){const n=await t.e(708).then(t.t.bind(t,2708,17));this.landscape.style.backgroundImage=`url(${n.default})`}async setRegularBackground(){const n=await t.e(188).then(t.t.bind(t,4188,17));this.landscape.style.backgroundImage=`url(${n.default})`}async setAppropriateBackground(n,e){n.matches&&await this.setMobileBackground(),e.matches&&await this.setRegularBackground()}async updateBackgroundBasedOnDimensions(){const n=window.matchMedia("(max-width: 600px)"),e=window.matchMedia("(min-width: 600px)");this.setAppropriateBackground(n,e),n.addEventListener("change",(async()=>{await this.setAppropriateBackground(n,e)})),e.addEventListener("change",(async()=>{await this.setAppropriateBackground(n,e)}))}async render(){this.createMainContainer(),await this.createLandscape(),await this.createTwoPlayersBubble(),await this.createPlayButton(),this.displayCurrentPlayersMode(),this.listenToBubble(),await this.updateBackgroundBasedOnDimensions()}}var $=t(3379),F=t.n($),K=t(7795),nn=t.n(K),en=t(569),tn=t.n(en),sn=t(3565),an=t.n(sn),rn=t(9216),on=t.n(rn),An=t(4589),cn=t.n(An),dn=t(1402),pn={};pn.styleTagTransform=cn(),pn.setAttributes=an(),pn.insert=tn().bind(null,"head"),pn.domAPI=nn(),pn.insertStyleElement=on(),F()(dn.Z,pn),dn.Z&&dn.Z.locals&&dn.Z.locals;const hn=async()=>{const n=new z;await n.render()};(async()=>{await(async()=>{const n=new class{async create(){this.headerImage=await t.e(767).then(t.t.bind(t,3767,17)),this.header=a("div","header",{style:`background-image: url(${this.headerImage.default})`})}async insertWatermark(){const n=await t.e(985).then(t.t.bind(t,9985,17)),e=a("a","watermark__link",{style:`background-image: url(${n.default})`,href:"https://github.com/ElMoscaviador/"});this.header.append(e)}append(){o.append(this.header)}async render(){await this.create(),await this.insertWatermark(),this.append()}};await n.render()})(),await(async()=>{const n=new H;await n.render(),n.listenToPlayButton(hn,n)})()})()},3233:(n,e,t)=>{"use strict";n.exports=t.p+"images/[8a0e03b68108d9e4e42d.ttf]"},6987:(n,e,t)=>{"use strict";n.exports=t.p+"images/[66f6baebbc82ed2a89ad.png]"},4125:(n,e,t)=>{"use strict";n.exports=t.p+"images/[d729560cc971b7b04338.png]"},4962:(n,e,t)=>{"use strict";n.exports=t.p+"images/[8433126dc7d00595bd63.png]"},3713:(n,e,t)=>{"use strict";n.exports=t.p+"images/[788e0b6e00ba3a21f8ed.jpg]"},9381:(n,e,t)=>{"use strict";n.exports=t.p+"images/[f1d4101d4860adb8e346.png]"},7527:(n,e,t)=>{"use strict";n.exports=t.p+"images/[b287ed655727e79f6a50.png]"},30:(n,e,t)=>{"use strict";n.exports=t.p+"images/[b9c0692a2377e4a50bc2.png]"},8894:(n,e,t)=>{"use strict";n.exports=t.p+"images/[9455cf37f28762d2f710.png]"},9397:(n,e,t)=>{"use strict";n.exports=t.p+"images/[281cfc21a7c09469fce8.png]"},6806:(n,e,t)=>{"use strict";n.exports=t.p+"images/[d38491e78ac8f20e2778.png]"},4637:(n,e,t)=>{"use strict";n.exports=t.p+"images/[671f41441d8f1c6743a8.png]"},4667:(n,e,t)=>{"use strict";n.exports=t.p+"images/[ca0a5669ed9aed3877f5.png]"},2488:(n,e,t)=>{"use strict";n.exports=t.p+"images/[a3762cde79f066ba0bea.png]"},2639:(n,e,t)=>{"use strict";n.exports=t.p+"images/[b24e08c8ac114a8eafde.png]"},969:(n,e,t)=>{"use strict";n.exports=t.p+"images/[a177fa109a999d8c396e.png]"},7623:(n,e,t)=>{"use strict";n.exports=t.p+"images/[5a7635c3c9fd9c42c3db.png]"},2712:(n,e,t)=>{"use strict";n.exports=t.p+"images/[3e442e5bb862997671fb.png]"},1570:(n,e,t)=>{"use strict";n.exports=t.p+"images/[7c5a21b2cdbacc68c178.png]"},3839:(n,e,t)=>{"use strict";n.exports=t.p+"images/[5097d0f8da46003f887b.png]"},3704:(n,e,t)=>{"use strict";n.exports=t.p+"images/[9528120154c8fc12f700.png]"},1:(n,e,t)=>{"use strict";n.exports=t.p+"images/[6206798a308384c82cdc.png]"},8787:(n,e,t)=>{"use strict";n.exports=t.p+"images/[896084f73c098674058e.png]"},2596:(n,e,t)=>{"use strict";n.exports=t.p+"images/[7048cc120d67e29d52fc.png]"},8636:(n,e,t)=>{"use strict";n.exports=t.p+"images/[8a56b6c68af4a0ca6829.png]"},8174:(n,e,t)=>{"use strict";n.exports=t.p+"images/[564700b0fe71b3f1e3c4.png]"},6637:(n,e,t)=>{"use strict";n.exports=t.p+"images/[081c20b9bd3b51eaa7c7.png]"},1790:(n,e,t)=>{"use strict";n.exports=t.p+"images/[963ab3300e57cbbd12e9.png]"},1416:(n,e,t)=>{"use strict";n.exports=t.p+"images/[a83d5860d1917c6cbb35.png]"},3467:(n,e,t)=>{"use strict";n.exports=t.p+"images/[197046e8bb0d81872af0.png]"},5425:(n,e,t)=>{"use strict";n.exports=t.p+"images/[bbd39d205637f2a522b5.png]"},8053:(n,e,t)=>{"use strict";n.exports=t.p+"images/[9a1bf9e76b8852e9d38e.png]"},740:(n,e,t)=>{"use strict";n.exports=t.p+"images/[7b2b3bfb7ca9cbc16cc1.png]"},9813:(n,e,t)=>{"use strict";n.exports=t.p+"images/[5af8e52dda3630969123.png]"},7012:(n,e,t)=>{"use strict";n.exports=t.p+"images/[5d3681a5f50f10ed9dc9.png]"},1999:(n,e,t)=>{"use strict";n.exports=t.p+"images/[e33618c2f0c7bbded369.png]"},2117:(n,e,t)=>{"use strict";n.exports=t.p+"images/[cd660334fc4bd5ea75f1.png]"},1120:(n,e,t)=>{"use strict";n.exports=t.p+"images/[c9389d7a8c1383ec79d3.png]"},206:(n,e,t)=>{"use strict";n.exports=t.p+"images/[93e486912107ed16526d.png]"},1618:(n,e,t)=>{"use strict";n.exports=t.p+"images/[77f316dec733e503f067.png]"},5195:(n,e,t)=>{"use strict";n.exports=t.p+"images/[c8951db0f9ca89b4daa1.png]"},1580:(n,e,t)=>{"use strict";n.exports=t.p+"images/[2b5d4118242caa778527.png]"},3134:(n,e,t)=>{"use strict";n.exports=t.p+"images/[2c6ee2199d1c772df133.png]"},847:(n,e,t)=>{"use strict";n.exports=t.p+"images/[f7b4064885c351b78a9e.png]"},175:(n,e,t)=>{"use strict";n.exports=t.p+"images/[d975bbb93dccd1ed2b34.png]"},6869:(n,e,t)=>{"use strict";n.exports=t.p+"images/[b30d129bb1816172879f.png]"},4846:(n,e,t)=>{"use strict";n.exports=t.p+"images/[96ac96b9c6936db796de.png]"},3054:(n,e,t)=>{"use strict";n.exports=t.p+"images/[cd5417eb836b05904dbf.png]"},2442:(n,e,t)=>{"use strict";n.exports=t.p+"images/[9480afb4a0f728ccf4e7.png]"},6771:(n,e,t)=>{"use strict";n.exports=t.p+"images/[7b74cff7cc7e66495f08.png]"},9297:(n,e,t)=>{"use strict";n.exports=t.p+"images/[1cfd8a697434b8cc05ae.png]"},1658:(n,e,t)=>{"use strict";n.exports=t.p+"images/[68324c022e158ca541c0.png]"},9970:(n,e,t)=>{"use strict";n.exports=t.p+"images/[e2279904b96c33b8668e.png]"},5518:(n,e,t)=>{"use strict";n.exports=t.p+"images/[f5171bc5fecc34e82892.png]"},3936:(n,e,t)=>{"use strict";n.exports=t.p+"images/[da6821db2df98b94ce4e.png]"},5811:(n,e,t)=>{"use strict";n.exports=t.p+"images/[78cab35c8b2f1e7df8ff.png]"},3417:(n,e,t)=>{"use strict";n.exports=t.p+"images/[87d23d87ada98698aad7.png]"},813:(n,e,t)=>{"use strict";n.exports=t.p+"images/[baf9f6026b3ee5b050eb.png]"},6146:(n,e,t)=>{"use strict";n.exports=t.p+"images/[e07f19a2c8a98cf76d30.png]"},2426:(n,e,t)=>{"use strict";n.exports=t.p+"images/[918732db2b7761f1f688.png]"},8899:(n,e,t)=>{"use strict";n.exports=t.p+"images/[b76f11f644b65d4c7d7e.png]"},9188:(n,e,t)=>{"use strict";n.exports=t.p+"images/[a9662d7924a4a1749911.png]"},2174:(n,e,t)=>{"use strict";n.exports=t.p+"images/[37585798fc88c4f3e9ed.png]"},4539:(n,e,t)=>{"use strict";n.exports=t.p+"images/[e46ea302b1b6159ab754.png]"},6130:(n,e,t)=>{"use strict";n.exports=t.p+"images/[d8080b95b94df85ae7aa.png]"},2404:(n,e,t)=>{"use strict";n.exports=t.p+"images/[3f549a5752905fd078c3.png]"},8243:(n,e,t)=>{"use strict";n.exports=t.p+"images/[4dae657f568f503a747b.png]"},7561:(n,e,t)=>{"use strict";n.exports=t.p+"images/[7cb92a3dc0f0f0a2c94f.png]"},2952:(n,e,t)=>{"use strict";n.exports=t.p+"images/[a8f6bfc175a2179e9d2f.png]"},7035:(n,e,t)=>{"use strict";n.exports=t.p+"images/[384707e2f782b243dfc3.png]"},8923:(n,e,t)=>{"use strict";n.exports=t.p+"images/[456b186e52ab48b14c4a.png]"},1583:(n,e,t)=>{"use strict";n.exports=t.p+"images/[e3fef55611980cd4c416.png]"},7682:(n,e,t)=>{"use strict";n.exports=t.p+"images/[5230f0b65f9cde1178c7.png]"},535:(n,e,t)=>{"use strict";n.exports=t.p+"images/[f37510a5f53b88b63fe6.png]"},3692:(n,e,t)=>{"use strict";n.exports=t.p+"images/[7932f01a65d3f0e8d831.png]"},4193:(n,e,t)=>{"use strict";n.exports=t.p+"images/[662eea8dea9c0a32b2b9.png]"},2731:(n,e,t)=>{"use strict";n.exports=t.p+"images/[55d45be613acb77c1ebd.png]"},8575:(n,e,t)=>{"use strict";n.exports=t.p+"images/[0b8dec70505daeb293e2.png]"},593:(n,e,t)=>{"use strict";n.exports=t.p+"images/[94beeb8aced8776b7a1d.png]"},24:(n,e,t)=>{"use strict";n.exports=t.p+"images/[b87604fe2154e6588d9c.png]"},1205:(n,e,t)=>{"use strict";n.exports=t.p+"images/[6f20314dbdb916866e01.png]"},946:(n,e,t)=>{"use strict";n.exports=t.p+"images/[2aa813f38d51faa9a888.png]"},6444:(n,e,t)=>{"use strict";n.exports=t.p+"images/[0688720920207f435762.png]"},3793:(n,e,t)=>{"use strict";n.exports=t.p+"images/[0178e035c3a12c313f73.png]"},9511:(n,e,t)=>{"use strict";n.exports=t.p+"images/[0d93a862462a441aa656.png]"},8354:(n,e,t)=>{"use strict";n.exports=t.p+"images/[ae9b307bce1141202806.png]"}},n=>{n(n.s=8123)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,